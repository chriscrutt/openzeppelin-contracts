{
    "contractName": "MintedCrowdsale",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "purchaser",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "TokensPurchased",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address"
                }
            ],
            "name": "buyTokens",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cashOut",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "forwardFunds",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "token",
            "outputs": [
                {
                    "internalType": "contract IERC1618",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wallet",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "weiRaised",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forwardFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC1618\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to MintedCrowdsale for minting.\",\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cashOut()\":{\"details\":\"withdraw all ether to `_wallet`\"},\"forwardFunds(uint256)\":{\"details\":\"withdraw specificied `amount` of ether to `_wallet`\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"MintedCrowdsale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"tokens are minted upon ether reception instead of transferred\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol\":\"MintedCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x7fca69b63a25bc3f6789a285cd99c824c9af683156dc5bf82de1e1d645045737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b28532cec44ee9de8884f13edbc4eacd61d6c3ff3daad723696b3eb1f1835323\",\"dweb:/ipfs/QmbWz1B4eNjDhCmFoo7rgCBAp1jzsTxe1TWu4J7UHsZHS8\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb4df1b9a849d50ddfe7c882cb5815cb14cc713410a01eb54dd4146ee3efd6caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503bae893deeb22b9c496b7a91233adc0c0454006d546c0911c5d9b5499471c6\",\"dweb:/ipfs/QmbCiqUtvUP8Vgwu8CkqD6MLc49XcJGqApHmUcdQ3dC2CT\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/roles/TrusteeRole.sol\":{\"keccak256\":\"0x1fee1df05821c776d59729f68953ce67d9a7814696a1853a505d5a400628bbe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1496998708b695e9a7fa1552e44787477a4415efeb0bee93828a71f64bf170d6\",\"dweb:/ipfs/Qme7doY1DZL71r95MdojQiyRR1TxEY5dNrYmNTbUViXxVE\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x37de64b267ac6267ffde54401cfe72d670c73a9883c4ee561579dcbd814d3137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e0a3f19a14393fc357e7efa6e15f7c68bad32dc8ead91d3a4a2a93954da344\",\"dweb:/ipfs/QmZEPAZLghf5bgapa1Zx2wKtuSBbnYt1J3ECH96VndMwMy\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0x40a3a14bdb1821fa25e113f259bc5730a476bbecfd71fae24538160bb805d8c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b217d18077ccb803c99a419c0e0f4d21df9713eff79b52c42415b88e115ee957\",\"dweb:/ipfs/QmaJFbta5swCbs85fpkGxG3ZPNUSRdYzsvnCP5LKtGCud5\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x1f1a8c6d2c56e71bd6d0df1588c5df823a5783b5305603503b3a843e37696129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcbb55f4a25ea1ea690781e3519ab9b008e8a628d404bcbddad2e17468419f1\",\"dweb:/ipfs/QmZxYEXQiyDPVS9bTrfmpQkcMGoTUk9vz42Pmn5Aa6pvkz\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618.sol\":{\"keccak256\":\"0x457a0f3782a7e9b1b8f5672da8938f97ceeb9152c2c46968c4089704123decc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3d4cf65e292330b3d4497af49baedaad0ce38935b7fe2ce882cf813480a18d0\",\"dweb:/ipfs/QmdM3va4YGtaiEYezdZKPRZUrpSZtEnHSfr76FBgun96pD\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618MintableOmniscient.sol\":{\"keccak256\":\"0xa2349e26e41fc2c8a02feb97e0acf88e8e704f563f2c47e7680db00870bc5678\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a06688b7529093a2bc1c3a2492a0d0e4ae0d0c15f2cc9f145d3c2534eb5e8a66\",\"dweb:/ipfs/QmYRGzebQSWYrKzXxHwNhc8WMJyZXJ2LAQghoR8ncsAmW9\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/IERC1618.sol\":{\"keccak256\":\"0x84f1f4599ee1308ec201e140d9c1868d9d1cbe33ce7c99f34404f41bed8a0bae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec89562daf2d0d516e08b69862238e7ef8ccbb7dccc242363026d515d4e0e58a\",\"dweb:/ipfs/QmdkYNuwd56W9EPBvcBxT9EuG6yAe3hzDvHyC8cMAiooM8\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/SafeERC1618.sol\":{\"keccak256\":\"0x67c2ff1fac360b4ce307c44f7ebaa649e11fcc35b2310393cb7566ab259dd632\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bee6869b716547efcee904c9f5749a1c8ca72c53d543bf38dc2e3ee74b5a9c1\",\"dweb:/ipfs/QmYsxEqKPiWLp74RUhsswQNY1P85987zMmbTaDjSzyqeE2\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x425dfab665d6ea9960bc0888d026321bbecb5da450df5b3298d16049e7949123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23b7501858b3c41cbc773689adc14be0422e69595bd251db2c5b4616e24095cb\",\"dweb:/ipfs/QmcDh9ZG4tbzFDicGN8JhnQ1nw7UZRPRiezwGYkz9tbVhF\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xc4da501f0bb6621021d8eac6e5fe7ce6f75b98e04a71abf7cd2a601e29ed5639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b550b785d0067b25d8a765fc12f1c83675e3766adaa448be55de99657414f9\",\"dweb:/ipfs/QmdfUnG3bkPN1H1AQ1FSuMt57QVLpXwQ1dqGbnTSENSLe3\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "",
    "deployedSourceMap": "",
    "sourcePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "exportedSymbols": {
            "Address": [
                14028
            ],
            "Context": [
                28
            ],
            "Crowdsale": [
                3721
            ],
            "ERC1618": [
                9364
            ],
            "ERC1618MintableOmniscient": [
                9515
            ],
            "IERC1618": [
                9552
            ],
            "MintedCrowdsale": [
                3754
            ],
            "ReentrancyGuard": [
                15407
            ],
            "Roles": [
                1685
            ],
            "SafeERC1618": [
                9627
            ],
            "SafeMath": [
                5084
            ],
            "TrusteeRole": [
                3168
            ]
        },
        "id": 3755,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 3723,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:19"
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
                "file": "../Crowdsale.sol",
                "id": 3724,
                "nodeType": "ImportDirective",
                "scope": 3755,
                "sourceUnit": 3722,
                "src": "66:26:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618MintableOmniscient.sol",
                "file": "../../token/ERC1618/ERC1618MintableOmniscient.sol",
                "id": 3725,
                "nodeType": "ImportDirective",
                "scope": 3755,
                "sourceUnit": 9516,
                "src": "93:59:19",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": true,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3727,
                            "name": "Crowdsale",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3721,
                            "src": "456:9:19"
                        },
                        "id": 3728,
                        "nodeType": "InheritanceSpecifier",
                        "src": "456:9:19"
                    }
                ],
                "contractDependencies": [
                    28,
                    3721,
                    15407
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 3726,
                    "nodeType": "StructuredDocumentation",
                    "src": "154:264:19",
                    "text": " @title MintedCrowdsale\n @notice tokens are minted upon ether reception instead of transferred\n @dev Extension of Crowdsale contract whose tokens are minted in each\n purchase. Token ownership should be transferred to MintedCrowdsale\n for minting."
                },
                "fullyImplemented": false,
                "id": 3754,
                "linearizedBaseContracts": [
                    3754,
                    3721,
                    15407,
                    28
                ],
                "name": "MintedCrowdsale",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "baseFunctions": [
                            3642
                        ],
                        "body": {
                            "id": 3752,
                            "nodeType": "Block",
                            "src": "770:288:19",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 3746,
                                                        "name": "beneficiary",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 3731,
                                                        "src": "940:11:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 3747,
                                                        "name": "tokenAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 3733,
                                                        "src": "969:11:19",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 3741,
                                                                            "name": "token",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 3507,
                                                                            "src": "908:5:19",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC1618_$9552_$",
                                                                                "typeString": "function () view returns (contract IERC1618)"
                                                                            }
                                                                        },
                                                                        "id": 3742,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "908:7:19",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC1618_$9552",
                                                                            "typeString": "contract IERC1618"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_contract$_IERC1618_$9552",
                                                                            "typeString": "contract IERC1618"
                                                                        }
                                                                    ],
                                                                    "id": 3740,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "900:7:19",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                        "typeString": "type(address)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 3739,
                                                                        "name": "address",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "900:7:19",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 3743,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "900:16:19",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 3738,
                                                            "name": "ERC1618MintableOmniscient",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 9515,
                                                            "src": "874:25:19",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_ERC1618MintableOmniscient_$9515_$",
                                                                "typeString": "type(contract ERC1618MintableOmniscient)"
                                                            }
                                                        },
                                                        "id": 3744,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "874:43:19",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC1618MintableOmniscient_$9515",
                                                            "typeString": "contract ERC1618MintableOmniscient"
                                                        }
                                                    },
                                                    "id": 3745,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mint",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 9514,
                                                    "src": "874:48:19",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,uint256) external returns (bool)"
                                                    }
                                                },
                                                "id": 3748,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "874:120:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4d696e74656443726f776473616c653a206d696e74696e67206661696c6564",
                                                "id": 3749,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1008:33:19",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                                                    "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                                                },
                                                "value": "MintedCrowdsale: minting failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                                                    "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                                                }
                                            ],
                                            "id": 3737,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "853:7:19",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 3750,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "853:198:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 3751,
                                    "nodeType": "ExpressionStatement",
                                    "src": "853:198:19"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 3729,
                            "nodeType": "StructuredDocumentation",
                            "src": "472:173:19",
                            "text": " @dev Overrides delivery by minting tokens upon purchase.\n @param beneficiary Token purchaser\n @param tokenAmount Number of tokens to be minted"
                        },
                        "id": 3753,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_deliverTokens",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 3735,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "757:8:19"
                        },
                        "parameters": {
                            "id": 3734,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3731,
                                    "mutability": "mutable",
                                    "name": "beneficiary",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3753,
                                    "src": "674:19:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 3730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "674:7:19",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 3733,
                                    "mutability": "mutable",
                                    "name": "tokenAmount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3753,
                                    "src": "695:19:19",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 3732,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "695:7:19",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "673:42:19"
                        },
                        "returnParameters": {
                            "id": 3736,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "770:0:19"
                        },
                        "scope": 3754,
                        "src": "650:408:19",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    }
                ],
                "scope": 3755,
                "src": "419:641:19"
            }
        ],
        "src": "33:1028:19"
    },
    "functionHashes": {
        "buyTokens(address)": "ec8ac4d8",
        "cashOut()": "793cd71e",
        "forwardFunds(uint256)": "c8997121",
        "rate()": "2c4e722e",
        "token()": "fc0c546a",
        "wallet()": "521eb273",
        "weiRaised()": "4042b66f"
    },
    "gasEstimates": null
}
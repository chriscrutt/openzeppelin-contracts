{
    "contractName": "MintedCrowdsale",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "purchaser",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "TokensPurchased",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "beneficiary",
                    "type": "address"
                }
            ],
            "name": "buyTokens",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "token",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wallet",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "weiRaised",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to MintedCrowdsale for minting.\",\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"MintedCrowdsale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"tokens are minted upon ether reception instead of transferred\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol\":\"MintedCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb4df1b9a849d50ddfe7c882cb5815cb14cc713410a01eb54dd4146ee3efd6caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503bae893deeb22b9c496b7a91233adc0c0454006d546c0911c5d9b5499471c6\",\"dweb:/ipfs/QmbCiqUtvUP8Vgwu8CkqD6MLc49XcJGqApHmUcdQ3dC2CT\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x31ab583dfb7ff466d2107aaa1e4ba79fe0ff0d32abaacb114d5aac03fca43a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://011920084038c1280b3153ed12c5310c33a4130b4620ba7ef85bcf31908525fd\",\"dweb:/ipfs/Qmau15BK6SetDpbXy2SjixH4QQUmzRjZu2Y8TJeLfg76ig\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8a24692e028c088f5a0c5a90c8bcb076f1f68defd0f93209e615ca4bd2982bca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b25087fabe334fe5e4ce87f9f963f4a85aed97d9a4cbaac81d675a81d6b553fe\",\"dweb:/ipfs/Qmcm1Utxhw5C1NK4qhcaMjRp6dRxbdNjoioQWu7L4tKAsF\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0xdd97d82e4c969184793d89ef306c509fa9c5f02964c08480372c99f6fad25814\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0952b78b702011c61f8617694fb9911350959d4c1ddedb08f7f17f4aadece5\",\"dweb:/ipfs/QmYWEFVDYkTHChsUL6pasFt26TW6tLAo81dGugPX14QVRR\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xf4af9a9457fb0720ee8192a1ec2e3cef6881800fd9d94e40d6438b22f18e0276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b46afe876d51215380c675e9bcfcd3e7a1bb2b5a9f9e53fcdb8de87ea4bbab9\",\"dweb:/ipfs/QmeYjVh92fb5xnRWysyUbp5AtEeJCrzJ9gyxLBYtYJSUAP\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa65145179bc595cb0bb21e987402a19e80630a17a10c9399e4c894c9fea9ea5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f8a56c0dd69d67dba389cb78da63a273008d68cbf7a613590e0e4f606bc673a\",\"dweb:/ipfs/QmNjmYrMuB23cPh4K2uHXxuThLv1Q8gkkWrDJomVZkpJCP\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x8e145df774950fd07cf79e4a31e2c210881d6f22af0ee2c42058de65dd003e8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28a42698c44e547df82fbea619692909927c14aad335230dba8d3564eee73df5\",\"dweb:/ipfs/Qmc2Xwb9u128QqoXVEz318x7qGARX99CSGFECbFRGi9JiD\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x58fa7711ffeb79caad6d0b947cc1f2db9375aef534aaa9afcde5416bffbfc870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f883cddcbe3f10d4ba97209b1084a477bd533379d47da9d4879c412c0dbd557c\",\"dweb:/ipfs/QmUsyTuZkUZNjcjPJxUMdE3MoQwxkJwF4aQ6CEqwcGb3z9\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xb4d24d1c3fa59c88e06fa9e3f0ad87498de44a4ee8b859c6d18d2398b87cdb28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61f5d8dcda5d1eee1df658a18a6c447bd63f03bc59ee43343dc55858a8d20431\",\"dweb:/ipfs/QmRinFsjhzZSdssuKUD25AFDT1L9ouWaEiCEG5U6mTU6qn\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x425dfab665d6ea9960bc0888d026321bbecb5da450df5b3298d16049e7949123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23b7501858b3c41cbc773689adc14be0422e69595bd251db2c5b4616e24095cb\",\"dweb:/ipfs/QmcDh9ZG4tbzFDicGN8JhnQ1nw7UZRPRiezwGYkz9tbVhF\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x7fca69b63a25bc3f6789a285cd99c824c9af683156dc5bf82de1e1d645045737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b28532cec44ee9de8884f13edbc4eacd61d6c3ff3daad723696b3eb1f1835323\",\"dweb:/ipfs/QmbWz1B4eNjDhCmFoo7rgCBAp1jzsTxe1TWu4J7UHsZHS8\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xc4da501f0bb6621021d8eac6e5fe7ce6f75b98e04a71abf7cd2a601e29ed5639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b550b785d0067b25d8a765fc12f1c83675e3766adaa448be55de99657414f9\",\"dweb:/ipfs/QmdfUnG3bkPN1H1AQ1FSuMt57QVLpXwQ1dqGbnTSENSLe3\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "",
    "deployedSourceMap": "",
    "sourcePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "exportedSymbols": {
            "Address": [
                15539
            ],
            "Context": [
                15653
            ],
            "Crowdsale": [
                3707
            ],
            "ERC20": [
                11330
            ],
            "ERC20Mintable": [
                11497
            ],
            "IERC20": [
                11936
            ],
            "MintedCrowdsale": [
                4243
            ],
            "MinterRole": [
                2721
            ],
            "ReentrancyGuard": [
                17042
            ],
            "Roles": [
                1656
            ],
            "SafeERC20": [
                12155
            ],
            "SafeMath": [
                6243
            ]
        },
        "id": 4244,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 4212,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:23"
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
                "file": "../Crowdsale.sol",
                "id": 4213,
                "nodeType": "ImportDirective",
                "scope": 4244,
                "sourceUnit": 3708,
                "src": "66:26:23",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20Mintable.sol",
                "file": "../../token/ERC20/ERC20Mintable.sol",
                "id": 4214,
                "nodeType": "ImportDirective",
                "scope": 4244,
                "sourceUnit": 11498,
                "src": "93:45:23",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": true,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4216,
                            "name": "Crowdsale",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3707,
                            "src": "442:9:23"
                        },
                        "id": 4217,
                        "nodeType": "InheritanceSpecifier",
                        "src": "442:9:23"
                    }
                ],
                "contractDependencies": [
                    3707,
                    15653,
                    17042
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 4215,
                    "nodeType": "StructuredDocumentation",
                    "src": "140:264:23",
                    "text": " @title MintedCrowdsale\n @notice tokens are minted upon ether reception instead of transferred\n @dev Extension of Crowdsale contract whose tokens are minted in each\n purchase. Token ownership should be transferred to MintedCrowdsale\n for minting."
                },
                "fullyImplemented": false,
                "id": 4243,
                "linearizedBaseContracts": [
                    4243,
                    3707,
                    17042,
                    15653
                ],
                "name": "MintedCrowdsale",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "baseFunctions": [
                            3645
                        ],
                        "body": {
                            "id": 4241,
                            "nodeType": "Block",
                            "src": "756:230:23",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 4235,
                                                        "name": "beneficiary",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4220,
                                                        "src": "897:11:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 4236,
                                                        "name": "tokenAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4222,
                                                        "src": "910:11:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 4230,
                                                                            "name": "token",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 3510,
                                                                            "src": "882:5:23",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11936_$",
                                                                                "typeString": "function () view returns (contract IERC20)"
                                                                            }
                                                                        },
                                                                        "id": 4231,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "882:7:23",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC20_$11936",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_contract$_IERC20_$11936",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    ],
                                                                    "id": 4229,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "874:7:23",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_address_$",
                                                                        "typeString": "type(address)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 4228,
                                                                        "name": "address",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "874:7:23",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 4232,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "874:16:23",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 4227,
                                                            "name": "ERC20Mintable",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 11497,
                                                            "src": "860:13:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$11497_$",
                                                                "typeString": "type(contract ERC20Mintable)"
                                                            }
                                                        },
                                                        "id": 4233,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "860:31:23",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC20Mintable_$11497",
                                                            "typeString": "contract ERC20Mintable"
                                                        }
                                                    },
                                                    "id": 4234,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mint",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11496,
                                                    "src": "860:36:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,uint256) external returns (bool)"
                                                    }
                                                },
                                                "id": 4237,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "860:62:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4d696e74656443726f776473616c653a206d696e74696e67206661696c6564",
                                                "id": 4238,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "936:33:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                                                    "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                                                },
                                                "value": "MintedCrowdsale: minting failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                                                    "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                                                }
                                            ],
                                            "id": 4226,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "839:7:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 4239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "839:140:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4240,
                                    "nodeType": "ExpressionStatement",
                                    "src": "839:140:23"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 4218,
                            "nodeType": "StructuredDocumentation",
                            "src": "458:173:23",
                            "text": " @dev Overrides delivery by minting tokens upon purchase.\n @param beneficiary Token purchaser\n @param tokenAmount Number of tokens to be minted"
                        },
                        "id": 4242,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_deliverTokens",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 4224,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "743:8:23"
                        },
                        "parameters": {
                            "id": 4223,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4220,
                                    "mutability": "mutable",
                                    "name": "beneficiary",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4242,
                                    "src": "660:19:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 4219,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "660:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 4222,
                                    "mutability": "mutable",
                                    "name": "tokenAmount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4242,
                                    "src": "681:19:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 4221,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "681:7:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "659:42:23"
                        },
                        "returnParameters": {
                            "id": 4225,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "756:0:23"
                        },
                        "scope": 4243,
                        "src": "636:350:23",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    }
                ],
                "scope": 4244,
                "src": "405:583:23"
            }
        ],
        "src": "33:956:23"
    },
    "functionHashes": {
        "buyTokens(address)": "ec8ac4d8",
        "rate()": "2c4e722e",
        "token()": "fc0c546a",
        "wallet()": "521eb273",
        "weiRaised()": "4042b66f"
    },
    "gasEstimates": null
}
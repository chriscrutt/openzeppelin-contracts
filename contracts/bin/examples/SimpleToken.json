{
    "contractName": "SimpleToken",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokens",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "TrusteeAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "TrusteeRemoved",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addTrustee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "changeManager",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isTrustee",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceTrustee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TrusteeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TrusteeRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addTrustee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"changeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isTrustee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceTrustee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre- assigned to the creator.  Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC1618-balanceOf}.\",\"returns\":{\"_0\":\"Returns the balance of the token for a specific address\"}},\"constructor\":{\"details\":\"Constructor that gives _msgSender() all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`)\",\"returns\":{\"_0\":\"Returns the number of decimals of the token\"}},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}. Requirements: - the caller must have the {MinterRole}.\"},\"name()\":{\"returns\":{\"_0\":\"Returns the name of the token.\"}},\"symbol()\":{\"returns\":{\"_0\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"totalSupply()\":{\"details\":\"See {IERC1618-totalSupply}.\",\"returns\":{\"_0\":\"Returns the total supply of the token\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC1618-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\",\"params\":{\"amount\":\"number of tokens to be transferred\",\"recipient\":\"address to receive token\"},\"returns\":{\"_0\":\"if transfer was successful\"}}},\"title\":\"A pre-written token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/Simple201.sol\":\"SimpleToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe80348b8db95720ba03c9d44bbba03b921280ac1d2eb1aa1c770504c5885ba28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f86048c223e01b7a14f879a730f3aae083f3d71d55823172fe04593ee94093\",\"dweb:/ipfs/QmWA1FFpxWzGBwUmJw1Mu9RjhhdTUgQmgiQdEqF2JQwWA6\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb4df1b9a849d50ddfe7c882cb5815cb14cc713410a01eb54dd4146ee3efd6caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503bae893deeb22b9c496b7a91233adc0c0454006d546c0911c5d9b5499471c6\",\"dweb:/ipfs/QmbCiqUtvUP8Vgwu8CkqD6MLc49XcJGqApHmUcdQ3dC2CT\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/roles/TrusteeRole.sol\":{\"keccak256\":\"0xc3911f7196c73f5a86d3a11eb3117b9e61dbf2fc09c385137d95ea9d9a3ec72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bcd13a8564a53f2e5e696d8a77d5eec6375969b66a262f3474cc53305e17f1e\",\"dweb:/ipfs/QmSWQDoxEFeaSCBJ9CiyCLdGPtUKeJXiU8PZr4JeetDfrt\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/Simple201.sol\":{\"keccak256\":\"0x1318bdebfaedf7887d5918ac4e3ba5c25ac67217925be3568e545c6d2701ff51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ffc7763de6d39b936a7fd2e804a91aa7e7761c349586c2134691856fe14cf8\",\"dweb:/ipfs/Qma3FyZQceggFYhDq2s3YVpRPhkmKvJy5kyVPL5iPwQptY\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x8d49c8507b8799328decb5316b97367106f202ae6b36dd10764a477f960c0518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702fe8cf4064118c43201ceaa50b2905dca6a20c3a43528696a925ec16d7846d\",\"dweb:/ipfs/QmZzixPwGcGwQnmwFAQwjwLHjGVzmM9dc36jHWt3PPdfde\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618.sol\":{\"keccak256\":\"0xb7ee965690dd50af001dbef284d6ca285276fc2f4bce4194d79659a7a4262504\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f7e3c7212edc3af76a82ae9f155b847ef230852f5473daafbc719e756e174c9\",\"dweb:/ipfs/QmQ2vW532kLChTE9sVmp6aLnYJfGvKnxbNA6HgP1YxTpVD\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618Mintable.sol\":{\"keccak256\":\"0xe03c8398b4c1cd7db4ac040cdf05613487577cc6139f6ddad5d61a7f265d113e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eafbdec5ac3e1193f47c518ec9914a2d943dea6724cdce8bbc1a91d4778e767f\",\"dweb:/ipfs/QmXLrrj3E2AsyNjKJdTfRrgAzeaTFTyFZHadPHw5cGR2BF\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/IERC1618.sol\":{\"keccak256\":\"0x769874e613147fef0319dcbbcb0f257c8c13445e051b06cc5d843b95e384d716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa8769dadb2ffb9d12983dfd0d0f138c3c67f6411c6ec6ad42edf1ced79e32d3\",\"dweb:/ipfs/QmWamY9rkcTb8E4jGvbqWB3YakP3bdf6EpZjjBTymWKCYu\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040516200129638038062001296833981016040819052620000349162000400565b604080518082018252600b81526a29b4b6b83632aa37b5b2b760a91b60208083019182528351808501909452600384526253494d60e81b9084015281519192916012916200008691600291906200035a565b5081516200009c9060039060208501906200035a565b506004805460ff191660ff9290921691909117905550620000c89050620000c262000133565b62000137565b620000d262000133565b600680546001600160a01b0319166001600160a01b03929092169190911790556200012c6200010062000133565b6200010a62000189565b6200011a9060ff16600a62000571565b62000126908462000659565b62000192565b50620006ce565b3390565b620001528160056200027e60201b620003951790919060201c565b6040516001600160a01b038216907f136b04e34cc22b4b7473adab82a20348a3f0600d6820f08c1a0543e5e9d5bff990600090a250565b60045460ff1690565b6001600160a01b038216620001c45760405162461bcd60e51b8152600401620001bb90620004c9565b60405180910390fd5b620001d260008383620002cf565b620001ee81600154620002d460201b620003e11790919060201c565b6001556001600160a01b0382166000908152602081815260409091205462000221918390620003e1620002d4821b17901c565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200027290859062000500565b60405180910390a35050565b6200028a82826200030f565b15620002aa5760405162461bcd60e51b8152600401620001bb9062000419565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b505050565b600080620002e3838562000509565b905083811015620003085760405162461bcd60e51b8152600401620001bb9062000450565b9392505050565b60006001600160a01b0382166200033a5760405162461bcd60e51b8152600401620001bb9062000487565b506001600160a01b03166000908152602091909152604090205460ff1690565b82805462000368906200067b565b90600052602060002090601f0160209004810192826200038c5760008555620003d7565b82601f10620003a757805160ff1916838001178555620003d7565b82800160010185558215620003d7579182015b82811115620003d7578251825591602001919060010190620003ba565b50620003e5929150620003e9565b5090565b5b80821115620003e55760008155600101620003ea565b60006020828403121562000412578081fd5b5051919050565b6020808252601f908201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200051f576200051f620006b8565b500190565b80825b600180861162000538575062000568565b8187048211156200054d576200054d620006b8565b808616156200055b57918102915b9490941c93800262000527565b94509492505050565b60006200030860001984846000826200058d5750600162000308565b816200059c5750600062000308565b8160018114620005b55760028114620005c057620005f4565b600191505062000308565b60ff841115620005d457620005d4620006b8565b6001841b915084821115620005ed57620005ed620006b8565b5062000308565b5060208310610133831016604e8410600b84101617156200062c575081810a83811115620006265762000626620006b8565b62000308565b6200063b848484600162000524565b808604821115620006505762000650620006b8565b02949350505050565b6000816000190483118215151615620006765762000676620006b8565b500290565b6002810460018216806200069057607f821691505b60208210811415620006b257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610bb880620006de6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461012b57806395d89b411461013e578063a3fbbaae14610146578063a9059cbb14610159578063c784cd171461016c578063dc78ac1c1461017f576100a9565b806306fdde03146100ae57806318160ddd146100cc578063313ce567146100e15780633723451c146100f657806340c10f191461010b575b600080fd5b6100b6610192565b6040516100c39190610807565b60405180910390f35b6100d4610224565b6040516100c39190610ac5565b6100e961022a565b6040516100c39190610ace565b6101096101043660046107b9565b610233565b005b61011e6101193660046107d3565b61023f565b6040516100c391906107fc565b6100d46101393660046107b9565b610284565b6100b66102a3565b6101096101543660046107b9565b6102b2565b61011e6101673660046107d3565b61033e565b61011e61017a3660046107b9565b610352565b61010961018d3660046107b9565b610365565b6060600280546101a190610b0b565b80601f01602080910402602001604051908101604052809291908181526020018280546101cd90610b0b565b801561021a5780601f106101ef5761010080835404028352916020019161021a565b820191906000526020600020905b8154815290600101906020018083116101fd57829003601f168201915b5050505050905090565b60015490565b60045460ff1690565b61023c81610417565b50565b600061024c61017a6104d1565b6102715760405162461bcd60e51b815260040161026890610a73565b60405180910390fd5b61027b83836104d5565b50600192915050565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600380546101a190610b0b565b6006546001600160a01b03828116911614156102e05760405162461bcd60e51b81526004016102689061090b565b6001600160a01b0381166103065760405162461bcd60e51b815260040161026890610977565b61030f81610352565b61031c5761031c81610595565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600061027b61034b6104d1565b84846105d7565b600061035f6005836106d3565b92915050565b61037061017a6104d1565b61038c5760405162461bcd60e51b815260040161026890610a73565b61023c81610595565b61039f82826106d3565b156103bc5760405162461bcd60e51b81526004016102689061089d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000806103ee8385610adc565b9050838110156104105760405162461bcd60e51b8152600401610268906108d4565b9392505050565b6006546001600160a01b03828116911614156104455760405162461bcd60e51b815260040161026890610942565b6006546001600160a01b03166104596104d1565b6001600160a01b031614806104865750806001600160a01b031661047b6104d1565b6001600160a01b0316145b61048f57600080fd5b61049a60058261071b565b6040516001600160a01b038216907ff624904bce005956e80ff2b94673fc173c8a2e6fae6d13ae077db8197e6253b590600090a250565b3390565b6001600160a01b0382166104fb5760405162461bcd60e51b815260040161026890610a3c565b61050760008383610763565b60015461051490826103e1565b6001556001600160a01b03821660009081526020819052604090205461053a90826103e1565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610589908590610ac5565b60405180910390a35050565b6105a0600582610395565b6040516001600160a01b038216907f136b04e34cc22b4b7473adab82a20348a3f0600d6820f08c1a0543e5e9d5bff990600090a250565b6001600160a01b0382166105fd5760405162461bcd60e51b81526004016102689061085a565b610608838383610763565b61064581604051806060016040528060268152602001610b5d602691396001600160a01b0386166000908152602081905260409020549190610768565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461067490826103e1565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106c6908590610ac5565b60405180910390a3505050565b60006001600160a01b0382166106fb5760405162461bcd60e51b8152600401610268906109fa565b506001600160a01b03166000908152602091909152604090205460ff1690565b61072582826106d3565b6107415760405162461bcd60e51b8152600401610268906109b9565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b505050565b6000818484111561078c5760405162461bcd60e51b81526004016102689190610807565b5060006107998486610af4565b95945050505050565b80356001600160a01b038116811461029e57600080fd5b6000602082840312156107ca578081fd5b610410826107a2565b600080604083850312156107e5578081fd5b6107ee836107a2565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561083357858101830151858201604001528201610817565b818111156108445783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601f908201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601a908201527f4163636f756e7420697320616c7265616479206d616e61676572000000000000604082015260600190565b6020808252818101527f43616e6e6f742072656d6f7665206d616e616765722061732074727573746565604082015260600190565b60208082526022908201527f43616e6e6f7420736574206d616e6167657220746f205a65726f206164647265604082015261737360f01b606082015260800190565b60208082526021908201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6040820152606560f81b606082015260800190565b60208082526022908201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60208082526032908201527f54727573746565526f6c653a2063616c6c657220646f6573206e6f74206861766040820152716520746865205472757374656520726f6c6560701b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610aef57610aef610b46565b500190565b600082821015610b0657610b06610b46565b500390565b600281046001821680610b1f57607f821691505b60208210811415610b4057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a26469706673582212200dceb52417c853a46b7161a3a64895dbe1eadb8786a07b8d497fab1524d05f6564736f6c63430008000033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461012b57806395d89b411461013e578063a3fbbaae14610146578063a9059cbb14610159578063c784cd171461016c578063dc78ac1c1461017f576100a9565b806306fdde03146100ae57806318160ddd146100cc578063313ce567146100e15780633723451c146100f657806340c10f191461010b575b600080fd5b6100b6610192565b6040516100c39190610807565b60405180910390f35b6100d4610224565b6040516100c39190610ac5565b6100e961022a565b6040516100c39190610ace565b6101096101043660046107b9565b610233565b005b61011e6101193660046107d3565b61023f565b6040516100c391906107fc565b6100d46101393660046107b9565b610284565b6100b66102a3565b6101096101543660046107b9565b6102b2565b61011e6101673660046107d3565b61033e565b61011e61017a3660046107b9565b610352565b61010961018d3660046107b9565b610365565b6060600280546101a190610b0b565b80601f01602080910402602001604051908101604052809291908181526020018280546101cd90610b0b565b801561021a5780601f106101ef5761010080835404028352916020019161021a565b820191906000526020600020905b8154815290600101906020018083116101fd57829003601f168201915b5050505050905090565b60015490565b60045460ff1690565b61023c81610417565b50565b600061024c61017a6104d1565b6102715760405162461bcd60e51b815260040161026890610a73565b60405180910390fd5b61027b83836104d5565b50600192915050565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600380546101a190610b0b565b6006546001600160a01b03828116911614156102e05760405162461bcd60e51b81526004016102689061090b565b6001600160a01b0381166103065760405162461bcd60e51b815260040161026890610977565b61030f81610352565b61031c5761031c81610595565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600061027b61034b6104d1565b84846105d7565b600061035f6005836106d3565b92915050565b61037061017a6104d1565b61038c5760405162461bcd60e51b815260040161026890610a73565b61023c81610595565b61039f82826106d3565b156103bc5760405162461bcd60e51b81526004016102689061089d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000806103ee8385610adc565b9050838110156104105760405162461bcd60e51b8152600401610268906108d4565b9392505050565b6006546001600160a01b03828116911614156104455760405162461bcd60e51b815260040161026890610942565b6006546001600160a01b03166104596104d1565b6001600160a01b031614806104865750806001600160a01b031661047b6104d1565b6001600160a01b0316145b61048f57600080fd5b61049a60058261071b565b6040516001600160a01b038216907ff624904bce005956e80ff2b94673fc173c8a2e6fae6d13ae077db8197e6253b590600090a250565b3390565b6001600160a01b0382166104fb5760405162461bcd60e51b815260040161026890610a3c565b61050760008383610763565b60015461051490826103e1565b6001556001600160a01b03821660009081526020819052604090205461053a90826103e1565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610589908590610ac5565b60405180910390a35050565b6105a0600582610395565b6040516001600160a01b038216907f136b04e34cc22b4b7473adab82a20348a3f0600d6820f08c1a0543e5e9d5bff990600090a250565b6001600160a01b0382166105fd5760405162461bcd60e51b81526004016102689061085a565b610608838383610763565b61064581604051806060016040528060268152602001610b5d602691396001600160a01b0386166000908152602081905260409020549190610768565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461067490826103e1565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106c6908590610ac5565b60405180910390a3505050565b60006001600160a01b0382166106fb5760405162461bcd60e51b8152600401610268906109fa565b506001600160a01b03166000908152602091909152604090205460ff1690565b61072582826106d3565b6107415760405162461bcd60e51b8152600401610268906109b9565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b505050565b6000818484111561078c5760405162461bcd60e51b81526004016102689190610807565b5060006107998486610af4565b95945050505050565b80356001600160a01b038116811461029e57600080fd5b6000602082840312156107ca578081fd5b610410826107a2565b600080604083850312156107e5578081fd5b6107ee836107a2565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561083357858101830151858201604001528201610817565b818111156108445783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601f908201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601a908201527f4163636f756e7420697320616c7265616479206d616e61676572000000000000604082015260600190565b6020808252818101527f43616e6e6f742072656d6f7665206d616e616765722061732074727573746565604082015260600190565b60208082526022908201527f43616e6e6f7420736574206d616e6167657220746f205a65726f206164647265604082015261737360f01b606082015260800190565b60208082526021908201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6040820152606560f81b606082015260800190565b60208082526022908201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60208082526032908201527f54727573746565526f6c653a2063616c6c657220646f6573206e6f74206861766040820152716520746865205472757374656520726f6c6560701b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610aef57610aef610b46565b500190565b600082821015610b0657610b06610b46565b500390565b600281046001821680610b1f57607f821691505b60208210811415610b4057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a26469706673582212200dceb52417c853a46b7161a3a64895dbe1eadb8786a07b8d497fab1524d05f6564736f6c63430008000033",
    "sourceMap": "423:285:3:-:0;;;573:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1293:191:5;;;;;;;;;;;-1:-1:-1;;;1293:191:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1293:191:5;;;;1406:13;;1293:191;;;630:2:3;;1406:13:5;;:5;;1293:191;1406:13;:::i;:::-;-1:-1:-1;1429:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;1456:9:5;:21;;-1:-1:-1;;1456:21:5;;;;;;;;;;;;-1:-1:-1;393:25:2;;-1:-1:-1;405:12:2;:10;:12::i;:::-;393:11;:25::i;:::-;439:12;:10;:12::i;:::-;428:8;:23;;-1:-1:-1;;;;;;428:23:2;-1:-1:-1;;;;;428:23:2;;;;;;;;;;644:55:3::1;650:12;:10;:12::i;:::-;686:10;:8;:10::i;:::-;674:23;::::0;678:19:::1;;674:2;:23;:::i;:::-;664:34;::::0;:6;:34:::1;:::i;:::-;644:5;:55::i;:::-;573:133:::0;423:285;;881:113:0;976:10;881:113;:::o;950:122:2:-;1007:22;1021:7;1007:9;:13;;;;;;:22;;;;:::i;:::-;1044:21;;-1:-1:-1;;;;;1044:21:2;;;;;;;;950:122;:::o;2146:81:5:-;2211:9;;;;2146:81;:::o;4831:362::-;-1:-1:-1;;;;;4906:21:5;;4898:65;;;;-1:-1:-1;;;4898:65:5;;;;;;;:::i;:::-;;;;;;;;;4974:49;5003:1;5007:7;5016:6;4974:20;:49::i;:::-;5049:24;5066:6;5049:12;;:16;;;;;;:24;;;;:::i;:::-;5034:12;:39;-1:-1:-1;;;;;5104:18:5;;:9;:18;;;;;;;;;;;;:30;;5127:6;;5104:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;5083:18:5;;:9;:18;;;;;;;;;;;:51;;;;5149:37;;5083:18;;:9;5149:37;;;;5179:6;;5149:37;:::i;:::-;;;;;;;;4831:362;;:::o;300:175:1:-;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;7271:113:5:-;;;;:::o;1045:176:4:-;1103:7;;1134:5;1138:1;1134;:5;:::i;:::-;1122:17;;1162:1;1157;:6;;1149:46;;;;-1:-1:-1;;;1149:46:4;;;;;;;:::i;:::-;1213:1;1045:176;-1:-1:-1;;;1045:176:4:o;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;423:285:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:285:3;;;-1:-1:-1;423:285:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:194:8;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;-1:-1:-1;186:16:8;;95:113;-1:-1:-1;95:113:8:o;213:355::-;415:2;397:21;;;454:2;434:18;;;427:30;493:33;488:2;473:18;;466:61;559:2;544:18;;387:181::o;573:351::-;775:2;757:21;;;814:2;794:18;;;787:30;853:29;848:2;833:18;;826:57;915:2;900:18;;747:177::o;929:398::-;1131:2;1113:21;;;1170:2;1150:18;;;1143:30;1209:34;1204:2;1189:18;;1182:62;-1:-1:-1;;;1275:2:8;1260:18;;1253:32;1317:3;1302:19;;1103:224::o;1332:355::-;1534:2;1516:21;;;1573:2;1553:18;;;1546:30;1612:33;1607:2;1592:18;;1585:61;1678:2;1663:18;;1506:181::o;1692:177::-;1838:25;;;1826:2;1811:18;;1793:76::o;1874:128::-;;1945:1;1941:6;1938:1;1935:13;1932:2;;;1951:18;;:::i;:::-;-1:-1:-1;1987:9:8;;1922:80::o;2007:453::-;2103:6;2126:5;2140:314;2189:1;2226:2;2216:8;2213:16;2203:2;;2233:5;;;2203:2;2274:4;2269:3;2265:14;2259:4;2256:24;2253:2;;;2283:18;;:::i;:::-;2333:2;2323:8;2319:17;2316:2;;;2348:16;;;;2316:2;2427:17;;;;;2387:15;;2140:314;;;2084:376;;;;;;;:::o;2465:139::-;;2554:44;-1:-1:-1;;2581:8:8;2575:4;2609:922;2693:8;2683:2;;-1:-1:-1;2734:1:8;2748:5;;2683:2;2782:4;2772:2;;-1:-1:-1;2819:1:8;2833:5;;2772:2;2864:4;2882:1;2877:59;;;;2950:1;2945:183;;;;2857:271;;2877:59;2907:1;2898:10;;2921:5;;;2945:183;2982:3;2972:8;2969:17;2966:2;;;2989:18;;:::i;:::-;3045:1;3035:8;3031:16;3022:25;;3073:3;3066:5;3063:14;3060:2;;;3080:18;;:::i;:::-;3113:5;;;2857:271;;3212:2;3202:8;3199:16;3193:3;3187:4;3184:13;3180:36;3174:2;3164:8;3161:16;3156:2;3150:4;3147:12;3143:35;3140:77;3137:2;;;-1:-1:-1;3249:19:8;;;3284:14;;;3281:2;;;3301:18;;:::i;:::-;3334:5;;3137:2;3381:42;3419:3;3409:8;3403:4;3400:1;3381:42;:::i;:::-;3456:6;3451:3;3447:16;3438:7;3435:29;3432:2;;;3467:18;;:::i;:::-;3505:20;;2673:858;-1:-1:-1;;;;2673:858:8:o;3536:168::-;;3642:1;3638;3634:6;3630:14;3627:1;3624:21;3619:1;3612:9;3605:17;3601:45;3598:2;;;3649:18;;:::i;:::-;-1:-1:-1;3689:9:8;;3588:116::o;3709:380::-;3794:1;3784:12;;3841:1;3831:12;;;3852:2;;3906:4;3898:6;3894:17;3884:27;;3852:2;3959;3951:6;3948:14;3928:18;3925:38;3922:2;;;4005:10;4000:3;3996:20;3993:1;3986:31;4040:4;4037:1;4030:15;4068:4;4065:1;4058:15;3922:2;;3764:325;;;:::o;4094:127::-;4155:10;4150:3;4146:20;4143:1;4136:31;4186:4;4183:1;4176:15;4210:4;4207:1;4200:15;4126:95;423:285:3;;;;;;",
    "deployedSourceMap": "423:285:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2348:98;;;:::i;:::-;;;;;;;:::i;2146:81::-;;;:::i;:::-;;;;;;;:::i;855:89:2:-;;;;;;:::i;:::-;;:::i;:::-;;557:169:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2583:153:5:-;;;;;;:::i;:::-;;:::i;1749:85::-;;;:::i;1359:309:2:-;;;;;;:::i;:::-;;:::i;3101:192:5:-;;;;;;:::i;:::-;;:::i;641:109:2:-;;;;;;:::i;:::-;;:::i;756:93::-;;;;;;:::i;:::-;;:::i;1552:81:5:-;1589:13;1621:5;1614:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:81;:::o;2348:98::-;2427:12;;2348:98;:::o;2146:81::-;2211:9;;;;2146:81;:::o;855:89:2:-;914:23;929:7;914:14;:23::i;:::-;855:89;:::o;557:169:6:-;656:4;518:23:2;528:12;:10;:12::i;518:23::-;497:120;;;;-1:-1:-1;;;497:120:2;;;;;;;:::i;:::-;;;;;;;;;676:22:6::1;682:7;691:6;676:5;:22::i;:::-;-1:-1:-1::0;715:4:6::1;557:169:::0;;;;:::o;2583:153:5:-;-1:-1:-1;;;;;2711:18:5;;2681:7;2711:18;;;;;;;;;;;2583:153;;;;:::o;1749:85::-;1788:13;1820:7;1813:14;;;;;:::i;1359:309:2:-;1435:8;;-1:-1:-1;;;;;1424:19:2;;;1435:8;;1424:19;;1416:58;;;;-1:-1:-1;;;1416:58:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1492:21:2;;1484:68;;;;-1:-1:-1;;;1484:68:2;;;;;;;:::i;:::-;1568:18;1578:7;1568:9;:18::i;:::-;1563:70;;1602:20;1614:7;1602:11;:20::i;:::-;1643:8;:18;;-1:-1:-1;;;;;;1643:18:2;-1:-1:-1;;;;;1643:18:2;;;;;;;;;;1359:309::o;3101:192:5:-;3203:4;3223:42;3233:12;:10;:12::i;:::-;3247:9;3258:6;3223:9;:42::i;641:109:2:-;698:4;721:22;:9;735:7;721:13;:22::i;:::-;714:29;641:109;-1:-1:-1;;641:109:2:o;756:93::-;518:23;528:12;:10;:12::i;518:23::-;497:120;;;;-1:-1:-1;;;497:120:2;;;;;;;:::i;:::-;822:20:::1;834:7;822:11;:20::i;300:175:1:-:0;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;1045:176:4:-;1103:7;;1134:5;1138:1;1134;:5;:::i;:::-;1122:17;;1162:1;1157;:6;;1149:46;;;;-1:-1:-1;;;1149:46:4;;;;;;;:::i;:::-;1213:1;1045:176;-1:-1:-1;;;1045:176:4:o;1078:275:2:-;1157:8;;-1:-1:-1;;;;;1146:19:2;;;1157:8;;1146:19;;1138:64;;;;-1:-1:-1;;;1138:64:2;;;;;;;:::i;:::-;1237:8;;-1:-1:-1;;;;;1237:8:2;1221:12;:10;:12::i;:::-;-1:-1:-1;;;;;1221:24:2;;:51;;;;1265:7;-1:-1:-1;;;;;1249:23:2;:12;:10;:12::i;:::-;-1:-1:-1;;;;;1249:23:2;;1221:51;1213:60;;;;;;1283:25;:9;1300:7;1283:16;:25::i;:::-;1323:23;;-1:-1:-1;;;;;1323:23:2;;;;;;;;1078:275;:::o;881:113:0:-;976:10;881:113;:::o;4831:362:5:-;-1:-1:-1;;;;;4906:21:5;;4898:65;;;;-1:-1:-1;;;4898:65:5;;;;;;;:::i;:::-;4974:49;5003:1;5007:7;5016:6;4974:20;:49::i;:::-;5049:12;;:24;;5066:6;5049:16;:24::i;:::-;5034:12;:39;-1:-1:-1;;;;;5104:18:5;;:9;:18;;;;;;;;;;;:30;;5127:6;5104:22;:30::i;:::-;-1:-1:-1;;;;;5083:18:5;;:9;:18;;;;;;;;;;;:51;;;;5149:37;;5083:18;;:9;5149:37;;;;5179:6;;5149:37;:::i;:::-;;;;;;;;4831:362;;:::o;950:122:2:-;1007:22;:9;1021:7;1007:13;:22::i;:::-;1044:21;;-1:-1:-1;;;;;1044:21:2;;;;;;;;950:122;:::o;3909:540:5:-;-1:-1:-1;;;;;4049:23:5;;4028:105;;;;-1:-1:-1;;;4028:105:5;;;;;;;:::i;:::-;4144:47;4165:6;4173:9;4184:6;4144:20;:47::i;:::-;4222:105;4257:6;4222:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4222:17:5;;:9;:17;;;;;;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;4202:17:5;;;:9;:17;;;;;;;;;;;:125;;;;4360:20;;;;;;;:32;;4385:6;4360:24;:32::i;:::-;-1:-1:-1;;;;;4337:20:5;;;:9;:20;;;;;;;;;;;;:55;;;;4407:35;;;;;;;;;;4435:6;;4407:35;:::i;:::-;;;;;;;;3909:540;;;:::o;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;550:180::-;629:18;633:4;639:7;629:3;:18::i;:::-;621:64;;;;-1:-1:-1;;;621:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;695:20:1;718:5;695:20;;;;;;;;;;;:28;;-1:-1:-1;;695:28:1;;;550:180::o;7271:113:5:-;;;;:::o;2125:217:4:-;2241:7;2276:12;2268:6;;;;2260:29;;;;-1:-1:-1;;;2260:29:4;;;;;;;;:::i;:::-;-1:-1:-1;2299:9:4;2311:5;2315:1;2311;:5;:::i;:::-;2299:17;2125:217;-1:-1:-1;;;;;2125:217:4:o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:8:o;668:187::-;833:14;;826:22;808:41;;796:2;781:18;;763:92::o;860:603::-;;1001:2;1030;1019:9;1012:21;1062:6;1056:13;1105:6;1100:2;1089:9;1085:18;1078:34;1130:4;1143:140;1157:6;1154:1;1151:13;1143:140;;;1252:14;;;1248:23;;1242:30;1218:17;;;1237:2;1214:26;1207:66;1172:10;;1143:140;;;1301:6;1298:1;1295:13;1292:2;;;1371:4;1366:2;1357:6;1346:9;1342:22;1338:31;1331:45;1292:2;-1:-1:-1;1447:2:8;1426:15;-1:-1:-1;;1422:29:8;1407:45;;;;1454:2;1403:54;;981:482;-1:-1:-1;;;981:482:8:o;1468:399::-;1670:2;1652:21;;;1709:2;1689:18;;;1682:30;1748:34;1743:2;1728:18;;1721:62;-1:-1:-1;;;1814:2:8;1799:18;;1792:33;1857:3;1842:19;;1642:225::o;1872:355::-;2074:2;2056:21;;;2113:2;2093:18;;;2086:30;2152:33;2147:2;2132:18;;2125:61;2218:2;2203:18;;2046:181::o;2232:351::-;2434:2;2416:21;;;2473:2;2453:18;;;2446:30;2512:29;2507:2;2492:18;;2485:57;2574:2;2559:18;;2406:177::o;2588:350::-;2790:2;2772:21;;;2829:2;2809:18;;;2802:30;2868:28;2863:2;2848:18;;2841:56;2929:2;2914:18;;2762:176::o;2943:356::-;3145:2;3127:21;;;3164:18;;;3157:30;3223:34;3218:2;3203:18;;3196:62;3290:2;3275:18;;3117:182::o;3304:398::-;3506:2;3488:21;;;3545:2;3525:18;;;3518:30;3584:34;3579:2;3564:18;;3557:62;-1:-1:-1;;;3650:2:8;3635:18;;3628:32;3692:3;3677:19;;3478:224::o;3707:397::-;3909:2;3891:21;;;3948:2;3928:18;;;3921:30;3987:34;3982:2;3967:18;;3960:62;-1:-1:-1;;;4053:2:8;4038:18;;4031:31;4094:3;4079:19;;3881:223::o;4109:398::-;4311:2;4293:21;;;4350:2;4330:18;;;4323:30;4389:34;4384:2;4369:18;;4362:62;-1:-1:-1;;;4455:2:8;4440:18;;4433:32;4497:3;4482:19;;4283:224::o;4512:355::-;4714:2;4696:21;;;4753:2;4733:18;;;4726:30;4792:33;4787:2;4772:18;;4765:61;4858:2;4843:18;;4686:181::o;4872:414::-;5074:2;5056:21;;;5113:2;5093:18;;;5086:30;5152:34;5147:2;5132:18;;5125:62;-1:-1:-1;;;5218:2:8;5203:18;;5196:48;5276:3;5261:19;;5046:240::o;5291:177::-;5437:25;;;5425:2;5410:18;;5392:76::o;5473:184::-;5645:4;5633:17;;;;5615:36;;5603:2;5588:18;;5570:87::o;5662:128::-;;5733:1;5729:6;5726:1;5723:13;5720:2;;;5739:18;;:::i;:::-;-1:-1:-1;5775:9:8;;5710:80::o;5795:125::-;;5863:1;5860;5857:8;5854:2;;;5868:18;;:::i;:::-;-1:-1:-1;5905:9:8;;5844:76::o;5925:380::-;6010:1;6000:12;;6057:1;6047:12;;;6068:2;;6122:4;6114:6;6110:17;6100:27;;6068:2;6175;6167:6;6164:14;6144:18;6141:38;6138:2;;;6221:10;6216:3;6212:20;6209:1;6202:31;6256:4;6253:1;6246:15;6284:4;6281:1;6274:15;6138:2;;5980:325;;;:::o;6310:127::-;6371:10;6366:3;6362:20;6359:1;6352:31;6402:4;6399:1;6392:15;6426:4;6423:1;6416:15",
    "sourcePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/Simple201.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/Simple201.sol",
        "exportedSymbols": {
            "Context": [
                28
            ],
            "ERC1618": [
                838
            ],
            "ERC1618Mintable": [
                868
            ],
            "IERC1618": [
                905
            ],
            "Roles": [
                117
            ],
            "SafeMath": [
                526
            ],
            "SimpleToken": [
                330
            ],
            "TrusteeRole": [
                290
            ]
        },
        "id": 331,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 292,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:31:3"
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol",
                "file": "../GSN/Context.sol",
                "id": 293,
                "nodeType": "ImportDirective",
                "scope": 331,
                "sourceUnit": 29,
                "src": "65:28:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618.sol",
                "file": "../token/ERC1618/ERC1618.sol",
                "id": 294,
                "nodeType": "ImportDirective",
                "scope": 331,
                "sourceUnit": 839,
                "src": "94:36:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC1618/ERC1618Mintable.sol",
                "file": "../token/ERC1618/ERC1618Mintable.sol",
                "id": 295,
                "nodeType": "ImportDirective",
                "scope": 331,
                "sourceUnit": 869,
                "src": "131:44:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 297,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28,
                            "src": "447:7:3"
                        },
                        "id": 298,
                        "nodeType": "InheritanceSpecifier",
                        "src": "447:7:3"
                    },
                    {
                        "baseName": {
                            "id": 299,
                            "name": "ERC1618",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 838,
                            "src": "456:6:3"
                        },
                        "id": 300,
                        "nodeType": "InheritanceSpecifier",
                        "src": "456:6:3"
                    },
                    {
                        "baseName": {
                            "id": 301,
                            "name": "ERC1618Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 868,
                            "src": "464:14:3"
                        },
                        "id": 302,
                        "nodeType": "InheritanceSpecifier",
                        "src": "464:14:3"
                    }
                ],
                "contractDependencies": [
                    28,
                    290,
                    838,
                    868,
                    905
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 296,
                    "nodeType": "StructuredDocumentation",
                    "src": "177:245:3",
                    "text": " @title A pre-written token\n @dev Very simple ERC20 Token example, where all tokens are pre-\n assigned to the creator.\n \n Note they can later distribute these tokens as they wish using\n `transfer` and other `ERC20` functions."
                },
                "fullyImplemented": true,
                "id": 330,
                "linearizedBaseContracts": [
                    330,
                    868,
                    290,
                    838,
                    905,
                    28
                ],
                "name": "SimpleToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 328,
                            "nodeType": "Block",
                            "src": "634:72:3",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 314,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 15,
                                                    "src": "650:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 315,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "650:12:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 325,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 316,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 305,
                                                    "src": "664:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 323,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 317,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "674:2:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 320,
                                                                            "name": "decimals",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 601,
                                                                            "src": "686:8:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                                "typeString": "function () view returns (uint8)"
                                                                            }
                                                                        },
                                                                        "id": 321,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "686:10:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    ],
                                                                    "id": 319,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "678:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 318,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "678:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 322,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "678:19:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "674:23:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 324,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "673:25:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "664:34:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 313,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 757,
                                            "src": "644:5:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "644:55:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 327,
                                    "nodeType": "ExpressionStatement",
                                    "src": "644:55:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 303,
                            "nodeType": "StructuredDocumentation",
                            "src": "485:83:3",
                            "text": " @dev Constructor that gives _msgSender() all of existing tokens."
                        },
                        "id": 329,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "53696d706c65546f6b656e",
                                        "id": 308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "608:13:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                                            "typeString": "literal_string \"SimpleToken\""
                                        },
                                        "value": "SimpleToken"
                                    },
                                    {
                                        "hexValue": "53494d",
                                        "id": 309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "623:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
                                            "typeString": "literal_string \"SIM\""
                                        },
                                        "value": "SIM"
                                    },
                                    {
                                        "hexValue": "3138",
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "630:2:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_18_by_1",
                                            "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                    }
                                ],
                                "id": 311,
                                "modifierName": {
                                    "id": 307,
                                    "name": "ERC1618",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 838,
                                    "src": "601:6:3"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "601:32:3"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 306,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 305,
                                    "mutability": "mutable",
                                    "name": "tokens",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 329,
                                    "src": "585:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 304,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "585:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "584:16:3"
                        },
                        "returnParameters": {
                            "id": 312,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "634:0:3"
                        },
                        "scope": 330,
                        "src": "573:133:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 331,
                "src": "423:285:3"
            }
        ],
        "src": "32:677:3"
    },
    "functionHashes": {
        "addTrustee(address)": "dc78ac1c",
        "balanceOf(address)": "70a08231",
        "changeManager(address)": "a3fbbaae",
        "decimals()": "313ce567",
        "isTrustee(address)": "c784cd17",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "renounceTrustee(address)": "3723451c",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "600000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addTrustee(address)": "infinite",
            "balanceOf(address)": "infinite",
            "changeManager(address)": "infinite",
            "decimals()": "1091",
            "isTrustee(address)": "1459",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "renounceTrustee(address)": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "1051",
            "transfer(address,uint256)": "infinite"
        }
    }
}
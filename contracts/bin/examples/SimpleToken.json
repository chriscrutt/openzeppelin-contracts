{
    "contractName": "SimpleToken",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokens",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "TrusteeAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "TrusteeRemoved",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addTrustee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "changeManager",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isTrustee",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "manager",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceTrustee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TrusteeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TrusteeRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addTrustee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"changeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isTrustee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceTrustee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives _msgSender() all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}. Requirements: - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"}},\"title\":\"SimpleToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleLegitToken.sol\":\"SimpleToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9897c91255b49f4e3077ab5e41f8b25697b6506dc19138ad20c83be77ae021d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6eddc83e7767302017fed60794dac4ca76bad17dbba9d6bd8f58553171e6398\",\"dweb:/ipfs/QmP3uWNgBMKrVtPtt1zn4bbgBC4c1nRU1K8cU7rwKnvvrX\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb4df1b9a849d50ddfe7c882cb5815cb14cc713410a01eb54dd4146ee3efd6caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503bae893deeb22b9c496b7a91233adc0c0454006d546c0911c5d9b5499471c6\",\"dweb:/ipfs/QmbCiqUtvUP8Vgwu8CkqD6MLc49XcJGqApHmUcdQ3dC2CT\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/roles/TrusteeRole.sol\":{\"keccak256\":\"0x5891184b79b4425028f34af084021553a2b7225ad4ecd261fc567897f3d1f452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9968475ca90bebd09b9d3cbee3519bae96bd6a59cc88259a837b6f6666b7bca5\",\"dweb:/ipfs/QmTRWDDiP1YixgpMQSJvFSVbvppYkE1YZffJGB4D5AR4F8\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleLegitToken.sol\":{\"keccak256\":\"0xd99c78037aa67320e52bc5fa11c8d21284d0bb5c3cf8985e91cb18105b848ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62af22d8412c4338e4867f81e41a8e61a3c16a83571c55f3aa08570172655c89\",\"dweb:/ipfs/QmWCWVqkoSsb7CgrgCD7ZXgRkBXMHH3EKzrPu4Z7ddXh89\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xef7bf556e020e85da9eb98c5d8b3cf9142f72c65e833480107ef23300407ba81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6937234ece6c782c1cf081908c4c4b0bb5d9cc935f3eef4532ce8518eb194dc\",\"dweb:/ipfs/QmaZUhYbv4GBpH3aJwCHMcrBcLGdt4tt7desCzc1rsN1uz\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20_1Legit.sol\":{\"keccak256\":\"0x76f0433893bb6b8a190e52e96c0e0f8fb4524527a808f47f8a6753e405e34976\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fc9679e9cdc0681d02e9c0eeb7b5f0f8f4f7b3c2a1c93da382f30b724314bf\",\"dweb:/ipfs/QmXDfS8f8vfzutg9Zrp8U3bJniseCsUNn73uxtk3jYLUUu\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/IERC20_1L.sol\":{\"keccak256\":\"0x300fc774fc33fcb0bb4995bf7b8182fa0f876828f61cd64c2b6256d821fd454b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca24486eba6cf9e02df5082c7dc38567c8137ca61a460a0c57824656bcf5d85c\",\"dweb:/ipfs/QmbzH7psu7cTd9YBXvch3eT8LfCSiABnvQG8SbVJfpJf8W\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/MintableERC20_1Legit.sol\":{\"keccak256\":\"0x5a7c198e7fb531118c79c46a1948c081dbcca73981320e87b047ba82716a6766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11c6ca2724046348fa73e9cec8a964c691f321558b77cf773a4ac4a70c506331\",\"dweb:/ipfs/QmcxmQopapgowDvpFcJZ2EDydRxm1c1YVAe259ifANNjge\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806374f7e5f41161007157806374f7e5f41461014957806395d89b4114610153578063a3fbbaae1461015b578063a9059cbb1461016e578063c784cd1714610181578063dc78ac1c14610194576100b4565b806306fdde03146100b957806318160ddd146100d7578063313ce567146100ec57806340c10f1914610101578063481c6a751461012157806370a0823114610136575b600080fd5b6100c16101a7565b6040516100ce919061087f565b60405180910390f35b6100df610239565b6040516100ce9190610b84565b6100f461023f565b6040516100ce9190610b8d565b61011461010f366004610837565b610248565b6040516100ce9190610874565b61012961028d565b6040516100ce9190610860565b6100df61014436600461081d565b61029c565b6101516102bb565b005b6100c16102cd565b61015161016936600461081d565b6102dc565b61011461017c366004610837565b610368565b61011461018f36600461081d565b610374565b6101516101a236600461081d565b610387565b6060600380546101b690610bca565b80601f01602080910402602001604051908101604052809291908181526020018280546101e290610bca565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b5050505050905090565b60025490565b60055460ff1690565b600061025561018f61043c565b61027a5760405162461bcd60e51b815260040161027190610b32565b60405180910390fd5b6102848383610440565b50600192915050565b6001546001600160a01b031690565b6001600160a01b0381166000908152602081905260409020545b919050565b6102cb6102c661043c565b61050b565b565b6060600480546101b690610bca565b6007546001600160a01b038281169116141561030a5760405162461bcd60e51b815260040161027190610983565b6001600160a01b0381166103305760405162461bcd60e51b8152600401610271906109ef565b61033981610374565b610346576103468161057b565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600061028483836105bd565b60006103816006836106de565b92915050565b61039261018f61043c565b6103ae5760405162461bcd60e51b815260040161027190610b32565b6103b78161057b565b50565b6103c482826106de565b156103e15760405162461bcd60e51b815260040161027190610915565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000806104138385610b9b565b9050838110156104355760405162461bcd60e51b81526004016102719061094c565b9392505050565b3390565b6001600160a01b0382166104665760405162461bcd60e51b815260040161027190610afb565b6104706001610726565b5061047d6000838361077f565b60025461048a9082610406565b6002556001600160a01b0382166000908152602081905260409020546104b09082610406565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104ff908590610b84565b60405180910390a35050565b6007546001600160a01b03828116911614156105395760405162461bcd60e51b8152600401610271906109ba565b610544600682610784565b6040516001600160a01b038216907ff624904bce005956e80ff2b94673fc173c8a2e6fae6d13ae077db8197e6253b590600090a250565b6105866006826103ba565b6040516001600160a01b038216907f136b04e34cc22b4b7473adab82a20348a3f0600d6820f08c1a0543e5e9d5bff990600090a250565b6001600160a01b0382166105e35760405162461bcd60e51b8152600401610271906108d2565b6105f56105ee61043c565b838361077f565b61063e81604051806060016040528060268152602001610c1c6026913960008061061d61043c565b6001600160a01b0316815260208101919091526040016000205491906107cc565b60008061064961043c565b6001600160a01b039081168252602080830193909352604091820160009081209490945585168352908290529020546106829082610406565b6001600160a01b0383166000818152602081905260409020919091556106a661043c565b6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104ff9190610b84565b60006001600160a01b0382166107065760405162461bcd60e51b815260040161027190610a72565b506001600160a01b03166000908152602091909152604090205460ff1690565b600060ff821661076f576001546001600160a01b031661074461043c565b6001600160a01b03161461076a5760405162461bcd60e51b815260040161027190610ab4565b610777565b5060006102b6565b506001919050565b505050565b61078e82826106de565b6107aa5760405162461bcd60e51b815260040161027190610a31565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600081848411156107f05760405162461bcd60e51b8152600401610271919061087f565b5060006107fd8486610bb3565b95945050505050565b80356001600160a01b03811681146102b657600080fd5b60006020828403121561082e578081fd5b61043582610806565b60008060408385031215610849578081fd5b61085283610806565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156108ab5785810183015185820160400152820161088f565b818111156108bc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601f908201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601a908201527f4163636f756e7420697320616c7265616479206d616e61676572000000000000604082015260600190565b6020808252818101527f43616e6e6f742072656d6f7665206d616e616765722061732074727573746565604082015260600190565b60208082526022908201527f43616e6e6f7420736574206d616e6167657220746f205a65726f206164647265604082015261737360f01b606082015260800190565b60208082526021908201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6040820152606560f81b606082015260800190565b60208082526022908201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526027908201527f4f6e6c7920746865206d616e616765722063616e206d616b65207468697320616040820152661c1c1c9bdd985b60ca1b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60208082526032908201527f54727573746565526f6c653a2063616c6c657220646f6573206e6f74206861766040820152716520746865205472757374656520726f6c6560701b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610bae57610bae610c05565b500190565b600082821015610bc557610bc5610c05565b500390565b600281046001821680610bde57607f821691505b60208210811415610bff57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a264697066735822122030982e5b5b1bb9e911b24e056460a3ab8a344059e3ead8c45b3a24502618197364736f6c63430008000033",
    "sourceMap": "418:291:3:-:0;;;572:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1970:268:5;;;;;;;;;;;;;-1:-1:-1;;;1970:268:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1970:268:5;;;631:2:3;2091:5:5;2083;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2106:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2133:9:5;:21;;-1:-1:-1;;2133:21:5;;;;;;;2219:12;:10;:12::i;:::-;2208:8;:23;;-1:-1:-1;;;;;;2208:23:5;-1:-1:-1;;;;;2208:23:5;;;;;;;;;;-1:-1:-1;393:25:2;;-1:-1:-1;405:12:2;;-1:-1:-1;405:10:2;:12::i;:::-;393:11;:25::i;:::-;439:12;:10;:12::i;:::-;428:8;:23;;-1:-1:-1;;;;;;428:23:2;-1:-1:-1;;;;;428:23:2;;;;;;;;;;645:55:3::1;651:12;:10;:12::i;:::-;687:10;:8;:10::i;:::-;675:23;::::0;679:19:::1;;675:2;:23;:::i;:::-;665:34;::::0;:6;:34:::1;:::i;:::-;645:5;:55::i;:::-;572:135:::0;418:291;;598:113:0;693:10;598:113;:::o;940:122:2:-;997:22;1011:7;997:9;:13;;;;;;:22;;;;:::i;:::-;1034:21;;-1:-1:-1;;;;;1034:21:2;;;;;;;;940:122;:::o;3205:81:5:-;3270:9;;;;3205:81;:::o;5962:391::-;-1:-1:-1;;;;;6045:21:5;;6037:65;;;;-1:-1:-1;;;6037:65:5;;;;;;;:::i;:::-;;;;;;;;;6112:11;6121:1;6112:8;:11::i;:::-;-1:-1:-1;6134:49:5;6163:1;6167:7;6176:6;6134:20;:49::i;:::-;6209:24;6226:6;6209:12;;:16;;;;;;:24;;;;:::i;:::-;6194:12;:39;-1:-1:-1;;;;;6264:18:5;;:9;:18;;;;;;;;;;;;:30;;6287:6;;6264:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6243:18:5;;:9;:18;;;;;;;;;;;:51;;;;6309:37;;6243:18;;:9;6309:37;;;;6339:6;;6309:37;:::i;:::-;;;;;;;;5962:391;;:::o;300:175:1:-;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;4239:486:5:-;4292:4;4312:10;;;4308:390;;4379:8;;-1:-1:-1;;;;;4379:8:5;4363:12;:10;:12::i;:::-;-1:-1:-1;;;;;4363:24:5;;4338:122;;;;-1:-1:-1;;;4338:122:5;;;;;;;:::i;:::-;4308:390;;;-1:-1:-1;4682:5:5;4675:12;;4308:390;-1:-1:-1;4714:4:5;4239:486;;;;:::o;8396:121::-;;;;:::o;882:176:4:-;940:7;;971:5;975:1;971;:5;:::i;:::-;959:17;;999:1;994;:6;;986:46;;;;-1:-1:-1;;;986:46:4;;;;;;;:::i;:::-;1050:1;882:176;-1:-1:-1;;;882:176:4:o;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;418:291:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;418:291:3;;;-1:-1:-1;418:291:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:194:8;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;-1:-1:-1;186:16:8;;95:113;-1:-1:-1;95:113:8:o;213:355::-;415:2;397:21;;;454:2;434:18;;;427:30;493:33;488:2;473:18;;466:61;559:2;544:18;;387:181::o;573:351::-;775:2;757:21;;;814:2;794:18;;;787:30;853:29;848:2;833:18;;826:57;915:2;900:18;;747:177::o;929:398::-;1131:2;1113:21;;;1170:2;1150:18;;;1143:30;1209:34;1204:2;1189:18;;1182:62;-1:-1:-1;;;1275:2:8;1260:18;;1253:32;1317:3;1302:19;;1103:224::o;1332:403::-;1534:2;1516:21;;;1573:2;1553:18;;;1546:30;1612:34;1607:2;1592:18;;1585:62;-1:-1:-1;;;1678:2:8;1663:18;;1656:37;1725:3;1710:19;;1506:229::o;1740:355::-;1942:2;1924:21;;;1981:2;1961:18;;;1954:30;2020:33;2015:2;2000:18;;1993:61;2086:2;2071:18;;1914:181::o;2100:177::-;2246:25;;;2234:2;2219:18;;2201:76::o;2282:128::-;;2353:1;2349:6;2346:1;2343:13;2340:2;;;2359:18;;:::i;:::-;-1:-1:-1;2395:9:8;;2330:80::o;2415:453::-;2511:6;2534:5;2548:314;2597:1;2634:2;2624:8;2621:16;2611:2;;2641:5;;;2611:2;2682:4;2677:3;2673:14;2667:4;2664:24;2661:2;;;2691:18;;:::i;:::-;2741:2;2731:8;2727:17;2724:2;;;2756:16;;;;2724:2;2835:17;;;;;2795:15;;2548:314;;;2492:376;;;;;;;:::o;2873:139::-;;2962:44;-1:-1:-1;;2989:8:8;2983:4;3017:922;3101:8;3091:2;;-1:-1:-1;3142:1:8;3156:5;;3091:2;3190:4;3180:2;;-1:-1:-1;3227:1:8;3241:5;;3180:2;3272:4;3290:1;3285:59;;;;3358:1;3353:183;;;;3265:271;;3285:59;3315:1;3306:10;;3329:5;;;3353:183;3390:3;3380:8;3377:17;3374:2;;;3397:18;;:::i;:::-;3453:1;3443:8;3439:16;3430:25;;3481:3;3474:5;3471:14;3468:2;;;3488:18;;:::i;:::-;3521:5;;;3265:271;;3620:2;3610:8;3607:16;3601:3;3595:4;3592:13;3588:36;3582:2;3572:8;3569:16;3564:2;3558:4;3555:12;3551:35;3548:77;3545:2;;;-1:-1:-1;3657:19:8;;;3692:14;;;3689:2;;;3709:18;;:::i;:::-;3742:5;;3545:2;3789:42;3827:3;3817:8;3811:4;3808:1;3789:42;:::i;:::-;3864:6;3859:3;3855:16;3846:7;3843:29;3840:2;;;3875:18;;:::i;:::-;3913:20;;3081:858;-1:-1:-1;;;;3081:858:8:o;3944:168::-;;4050:1;4046;4042:6;4038:14;4035:1;4032:21;4027:1;4020:9;4013:17;4009:45;4006:2;;;4057:18;;:::i;:::-;-1:-1:-1;4097:9:8;;3996:116::o;4117:380::-;4202:1;4192:12;;4249:1;4239:12;;;4260:2;;4314:4;4306:6;4302:17;4292:27;;4260:2;4367;4359:6;4356:14;4336:18;4333:38;4330:2;;;4413:10;4408:3;4404:20;4401:1;4394:31;4448:4;4445:1;4438:15;4476:4;4473:1;4466:15;4330:2;;4172:325;;;:::o;4502:127::-;4563:10;4558:3;4554:20;4551:1;4544:31;4594:4;4591:1;4584:15;4618:4;4615:1;4608:15;4534:95;418:291:3;;;;;;",
    "deployedSourceMap": "418:291:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3346:98;;;:::i;:::-;;;;;;;:::i;3205:81::-;;;:::i;:::-;;;;;;;:::i;567:169:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3755:81:5:-;;;:::i;:::-;;;;;;;:::i;3502:117::-;;;;;;:::i;:::-;;:::i;855:79:2:-;;;:::i;:::-;;2497:85:5;;;:::i;1278:309:2:-;;;;;;:::i;:::-;;:::i;4039:194:5:-;;;;;;:::i;:::-;;:::i;641:109:2:-;;;;;;:::i;:::-;;:::i;756:93::-;;;;;;:::i;:::-;;:::i;2303:81:5:-;2340:13;2372:5;2365:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:81;:::o;3346:98::-;3425:12;;3346:98;:::o;3205:81::-;3270:9;;;;3205:81;:::o;567:169:7:-;666:4;518:23:2;528:12;:10;:12::i;518:23::-;497:120;;;;-1:-1:-1;;;497:120:2;;;;;;;:::i;:::-;;;;;;;;;686:22:7::1;692:7;701:6;686:5;:22::i;:::-;-1:-1:-1::0;725:4:7::1;567:169:::0;;;;:::o;3755:81:5:-;3821:8;;-1:-1:-1;;;;;3821:8:5;3755:81;:::o;3502:117::-;-1:-1:-1;;;;;3594:18:5;;3568:7;3594:18;;;;;;;;;;;3502:117;;;;:::o;855:79:2:-;899:28;914:12;:10;:12::i;:::-;899:14;:28::i;:::-;855:79::o;2497:85:5:-;2536:13;2568:7;2561:14;;;;;:::i;1278:309:2:-;1354:8;;-1:-1:-1;;;;;1343:19:2;;;1354:8;;1343:19;;1335:58;;;;-1:-1:-1;;;1335:58:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1411:21:2;;1403:68;;;;-1:-1:-1;;;1403:68:2;;;;;;;:::i;:::-;1487:18;1497:7;1487:9;:18::i;:::-;1482:70;;1521:20;1533:7;1521:11;:20::i;:::-;1562:8;:18;;-1:-1:-1;;;;;;1562:18:2;-1:-1:-1;;;;;1562:18:2;;;;;;;;;;1278:309::o;4039:194:5:-;4157:4;4177:28;4187:9;4198:6;4177:9;:28::i;641:109:2:-;698:4;721:22;:9;735:7;721:13;:22::i;:::-;714:29;641:109;-1:-1:-1;;641:109:2:o;756:93::-;518:23;528:12;:10;:12::i;518:23::-;497:120;;;;-1:-1:-1;;;497:120:2;;;;;;;:::i;:::-;822:20:::1;834:7;822:11;:20::i;:::-;756:93:::0;:::o;300:175:1:-;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;882:176:4:-;940:7;;971:5;975:1;971;:5;:::i;:::-;959:17;;999:1;994;:6;;986:46;;;;-1:-1:-1;;;986:46:4;;;;;;;:::i;:::-;1050:1;882:176;-1:-1:-1;;;882:176:4:o;598:113:0:-;693:10;598:113;:::o;5962:391:5:-;-1:-1:-1;;;;;6045:21:5;;6037:65;;;;-1:-1:-1;;;6037:65:5;;;;;;;:::i;:::-;6112:11;6121:1;6112:8;:11::i;:::-;;6134:49;6163:1;6167:7;6176:6;6134:20;:49::i;:::-;6209:12;;:24;;6226:6;6209:16;:24::i;:::-;6194:12;:39;-1:-1:-1;;;;;6264:18:5;;:9;:18;;;;;;;;;;;:30;;6287:6;6264:22;:30::i;:::-;-1:-1:-1;;;;;6243:18:5;;:9;:18;;;;;;;;;;;:51;;;;6309:37;;6243:18;;:9;6309:37;;;;6339:6;;6309:37;:::i;:::-;;;;;;;;5962:391;;:::o;1068:204:2:-;1147:8;;-1:-1:-1;;;;;1136:19:2;;;1147:8;;1136:19;;1128:64;;;;-1:-1:-1;;;1128:64:2;;;;;;;:::i;:::-;1202:25;:9;1219:7;1202:16;:25::i;:::-;1242:23;;-1:-1:-1;;;;;1242:23:2;;;;;;;;1068:204;:::o;940:122::-;997:22;:9;1011:7;997:13;:22::i;:::-;1034:21;;-1:-1:-1;;;;;1034:21:2;;;;;;;;940:122;:::o;5199:492:5:-;-1:-1:-1;;;;;5288:23:5;;5280:71;;;;-1:-1:-1;;;5280:71:5;;;;;;;:::i;:::-;5362:53;5383:12;:10;:12::i;:::-;5397:9;5408:6;5362:20;:53::i;:::-;5452:111;5493:6;5452:111;;;;;;;;;;;;;;;;;:9;:23;5462:12;:10;:12::i;:::-;-1:-1:-1;;;;;5452:23:5;;;;;;;;;;;;-1:-1:-1;5452:23:5;;;:111;:27;:111::i;:::-;5426:9;:23;5436:12;:10;:12::i;:::-;-1:-1:-1;;;;;5426:23:5;;;;;;;;;;;;;;;;;-1:-1:-1;5426:23:5;;;:137;;;;5596:20;;;;;;;;;;;:32;;5621:6;5596:24;:32::i;:::-;-1:-1:-1;;;;;5573:20:5;;:9;:20;;;;;;;;;;:55;;;;5652:12;:10;:12::i;:::-;-1:-1:-1;;;;;5643:41:5;;5677:6;5643:41;;;;;;:::i;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;4239:486:5:-;4292:4;4312:10;;;4308:390;;4379:8;;-1:-1:-1;;;;;4379:8:5;4363:12;:10;:12::i;:::-;-1:-1:-1;;;;;4363:24:5;;4338:122;;;;-1:-1:-1;;;4338:122:5;;;;;;;:::i;:::-;4308:390;;;-1:-1:-1;4682:5:5;4675:12;;4308:390;-1:-1:-1;4714:4:5;4239:486;;;:::o;8396:121::-;;;;:::o;550:180:1:-;629:18;633:4;639:7;629:3;:18::i;:::-;621:64;;;;-1:-1:-1;;;621:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;695:20:1;718:5;695:20;;;;;;;;;;;:28;;-1:-1:-1;;695:28:1;;;550:180::o;1754:217:4:-;1870:7;1905:12;1897:6;;;;1889:29;;;;-1:-1:-1;;;1889:29:4;;;;;;;;:::i;:::-;-1:-1:-1;1928:9:4;1940:5;1944:1;1940;:5;:::i;:::-;1928:17;1754:217;-1:-1:-1;;;;;1754:217:4:o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:8:o;668:203::-;-1:-1:-1;;;;;832:32:8;;;;814:51;;802:2;787:18;;769:102::o;876:187::-;1041:14;;1034:22;1016:41;;1004:2;989:18;;971:92::o;1068:603::-;;1209:2;1238;1227:9;1220:21;1270:6;1264:13;1313:6;1308:2;1297:9;1293:18;1286:34;1338:4;1351:140;1365:6;1362:1;1359:13;1351:140;;;1460:14;;;1456:23;;1450:30;1426:17;;;1445:2;1422:26;1415:66;1380:10;;1351:140;;;1509:6;1506:1;1503:13;1500:2;;;1579:4;1574:2;1565:6;1554:9;1550:22;1546:31;1539:45;1500:2;-1:-1:-1;1655:2:8;1634:15;-1:-1:-1;;1630:29:8;1615:45;;;;1662:2;1611:54;;1189:482;-1:-1:-1;;;1189:482:8:o;1676:399::-;1878:2;1860:21;;;1917:2;1897:18;;;1890:30;1956:34;1951:2;1936:18;;1929:62;-1:-1:-1;;;2022:2:8;2007:18;;2000:33;2065:3;2050:19;;1850:225::o;2080:355::-;2282:2;2264:21;;;2321:2;2301:18;;;2294:30;2360:33;2355:2;2340:18;;2333:61;2426:2;2411:18;;2254:181::o;2440:351::-;2642:2;2624:21;;;2681:2;2661:18;;;2654:30;2720:29;2715:2;2700:18;;2693:57;2782:2;2767:18;;2614:177::o;2796:350::-;2998:2;2980:21;;;3037:2;3017:18;;;3010:30;3076:28;3071:2;3056:18;;3049:56;3137:2;3122:18;;2970:176::o;3151:356::-;3353:2;3335:21;;;3372:18;;;3365:30;3431:34;3426:2;3411:18;;3404:62;3498:2;3483:18;;3325:182::o;3512:398::-;3714:2;3696:21;;;3753:2;3733:18;;;3726:30;3792:34;3787:2;3772:18;;3765:62;-1:-1:-1;;;3858:2:8;3843:18;;3836:32;3900:3;3885:19;;3686:224::o;3915:397::-;4117:2;4099:21;;;4156:2;4136:18;;;4129:30;4195:34;4190:2;4175:18;;4168:62;-1:-1:-1;;;4261:2:8;4246:18;;4239:31;4302:3;4287:19;;4089:223::o;4317:398::-;4519:2;4501:21;;;4558:2;4538:18;;;4531:30;4597:34;4592:2;4577:18;;4570:62;-1:-1:-1;;;4663:2:8;4648:18;;4641:32;4705:3;4690:19;;4491:224::o;4720:403::-;4922:2;4904:21;;;4961:2;4941:18;;;4934:30;5000:34;4995:2;4980:18;;4973:62;-1:-1:-1;;;5066:2:8;5051:18;;5044:37;5113:3;5098:19;;4894:229::o;5128:355::-;5330:2;5312:21;;;5369:2;5349:18;;;5342:30;5408:33;5403:2;5388:18;;5381:61;5474:2;5459:18;;5302:181::o;5488:414::-;5690:2;5672:21;;;5729:2;5709:18;;;5702:30;5768:34;5763:2;5748:18;;5741:62;-1:-1:-1;;;5834:2:8;5819:18;;5812:48;5892:3;5877:19;;5662:240::o;5907:177::-;6053:25;;;6041:2;6026:18;;6008:76::o;6089:184::-;6261:4;6249:17;;;;6231:36;;6219:2;6204:18;;6186:87::o;6278:128::-;;6349:1;6345:6;6342:1;6339:13;6336:2;;;6355:18;;:::i;:::-;-1:-1:-1;6391:9:8;;6326:80::o;6411:125::-;;6479:1;6476;6473:8;6470:2;;;6484:18;;:::i;:::-;-1:-1:-1;6521:9:8;;6460:76::o;6541:380::-;6626:1;6616:12;;6673:1;6663:12;;;6684:2;;6738:4;6730:6;6726:17;6716:27;;6684:2;6791;6783:6;6780:14;6760:18;6757:38;6754:2;;;6837:10;6832:3;6828:20;6825:1;6818:31;6872:4;6869:1;6862:15;6900:4;6897:1;6890:15;6754:2;;6596:325;;;:::o;6926:127::-;6987:10;6982:3;6978:20;6975:1;6968:31;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15",
    "sourcePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleLegitToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleLegitToken.sol",
        "exportedSymbols": {
            "Context": [
                25
            ],
            "ERC20_1L": [
                850
            ],
            "IERC20_1L": [
                887
            ],
            "MintableERC20_1L": [
                917
            ],
            "Roles": [
                114
            ],
            "SafeMath": [
                510
            ],
            "SimpleToken": [
                314
            ],
            "TrusteeRole": [
                274
            ]
        },
        "id": 315,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 276,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:3"
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol",
                "file": "../GSN/Context.sol",
                "id": 277,
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 26,
                "src": "66:28:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20_1Legit.sol",
                "file": "../token/ERC20/ERC20_1Legit.sol",
                "id": 278,
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 851,
                "src": "95:41:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/MintableERC20_1Legit.sol",
                "file": "../token/ERC20/MintableERC20_1Legit.sol",
                "id": 279,
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 918,
                "src": "137:49:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 281,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "442:7:3"
                        },
                        "id": 282,
                        "nodeType": "InheritanceSpecifier",
                        "src": "442:7:3"
                    },
                    {
                        "baseName": {
                            "id": 283,
                            "name": "ERC20_1L",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 850,
                            "src": "451:8:3"
                        },
                        "id": 284,
                        "nodeType": "InheritanceSpecifier",
                        "src": "451:8:3"
                    },
                    {
                        "baseName": {
                            "id": 285,
                            "name": "MintableERC20_1L",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 917,
                            "src": "461:16:3"
                        },
                        "id": 286,
                        "nodeType": "InheritanceSpecifier",
                        "src": "461:16:3"
                    }
                ],
                "contractDependencies": [
                    25,
                    274,
                    850,
                    887,
                    917
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "188:229:3",
                    "text": " @title SimpleToken\n @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n Note they can later distribute these tokens as they wish using `transfer` and other\n `ERC20` functions."
                },
                "fullyImplemented": true,
                "id": 314,
                "linearizedBaseContracts": [
                    314,
                    917,
                    274,
                    850,
                    887,
                    25
                ],
                "name": "SimpleToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 312,
                            "nodeType": "Block",
                            "src": "635:72:3",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 298,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 13,
                                                    "src": "651:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 299,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "651:12:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 309,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 300,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 289,
                                                    "src": "665:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 307,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 301,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "675:2:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 304,
                                                                            "name": "decimals",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 592,
                                                                            "src": "687:8:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                                "typeString": "function () view returns (uint8)"
                                                                            }
                                                                        },
                                                                        "id": 305,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "687:10:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    ],
                                                                    "id": 303,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "679:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 302,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "679:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 306,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "679:19:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "675:23:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 308,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "674:25:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "665:34:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 297,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 786,
                                            "src": "645:5:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "645:55:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 311,
                                    "nodeType": "ExpressionStatement",
                                    "src": "645:55:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 287,
                            "nodeType": "StructuredDocumentation",
                            "src": "484:83:3",
                            "text": " @dev Constructor that gives _msgSender() all of existing tokens."
                        },
                        "id": 313,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "53696d706c65546f6b656e",
                                        "id": 292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "609:13:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                                            "typeString": "literal_string \"SimpleToken\""
                                        },
                                        "value": "SimpleToken"
                                    },
                                    {
                                        "hexValue": "53494d",
                                        "id": 293,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "624:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
                                            "typeString": "literal_string \"SIM\""
                                        },
                                        "value": "SIM"
                                    },
                                    {
                                        "hexValue": "3138",
                                        "id": 294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "631:2:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_18_by_1",
                                            "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                    }
                                ],
                                "id": 295,
                                "modifierName": {
                                    "id": 291,
                                    "name": "ERC20_1L",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 850,
                                    "src": "600:8:3"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "600:34:3"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 290,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 289,
                                    "mutability": "mutable",
                                    "name": "tokens",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 313,
                                    "src": "584:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 288,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "584:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "583:16:3"
                        },
                        "returnParameters": {
                            "id": 296,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "635:0:3"
                        },
                        "scope": 314,
                        "src": "572:135:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 315,
                "src": "418:291:3"
            }
        ],
        "src": "33:677:3"
    },
    "functionHashes": {
        "addTrustee(address)": "dc78ac1c",
        "balanceOf(address)": "70a08231",
        "changeManager(address)": "a3fbbaae",
        "decimals()": "313ce567",
        "isTrustee(address)": "c784cd17",
        "manager()": "481c6a75",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "renounceTrustee()": "74f7e5f4",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "638200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addTrustee(address)": "infinite",
            "balanceOf(address)": "infinite",
            "changeManager(address)": "infinite",
            "decimals()": "1091",
            "isTrustee(address)": "1459",
            "manager()": "1159",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "renounceTrustee()": "24143",
            "symbol()": "infinite",
            "totalSupply()": "1051",
            "transfer(address,uint256)": "infinite"
        }
    }
}
{
    "contractName": "SimpleToken",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokens",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addMinter",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isMinter",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives _msgSender() all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}. Requirements: - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"SimpleToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9897c91255b49f4e3077ab5e41f8b25697b6506dc19138ad20c83be77ae021d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6eddc83e7767302017fed60794dac4ca76bad17dbba9d6bd8f58553171e6398\",\"dweb:/ipfs/QmP3uWNgBMKrVtPtt1zn4bbgBC4c1nRU1K8cU7rwKnvvrX\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb4df1b9a849d50ddfe7c882cb5815cb14cc713410a01eb54dd4146ee3efd6caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://503bae893deeb22b9c496b7a91233adc0c0454006d546c0911c5d9b5499471c6\",\"dweb:/ipfs/QmbCiqUtvUP8Vgwu8CkqD6MLc49XcJGqApHmUcdQ3dC2CT\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x7859f574a4518bc0da8828cbcab234093381e22bd115da8bd44fca61e741082e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ea96d383de0f118d2da1d92603ace0992a900f85dd44e5cbbe0b00586d956d0\",\"dweb:/ipfs/QmXNQYKE1N13q1X5P5SuxN3DUUz5WDn6pafz1EPSuaXMdY\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleToken.sol\":{\"keccak256\":\"0x5e09546523a4dfcf10fe54616001c787b24b727521ff6df2b14393b7b85d03ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c36f68fa04175c9e2ca65daddcdb0a31a422772795f0061369ffd9567aeb0d2c\",\"dweb:/ipfs/QmNhMF8J3BUhH5PCEyKF3ha2dAe9npiYPcUYpD4GYWGAQr\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xef7bf556e020e85da9eb98c5d8b3cf9142f72c65e833480107ef23300407ba81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6937234ece6c782c1cf081908c4c4b0bb5d9cc935f3eef4532ce8518eb194dc\",\"dweb:/ipfs/QmaZUhYbv4GBpH3aJwCHMcrBcLGdt4tt7desCzc1rsN1uz\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x450adecd61a1abea9f925947f22c3bc47f9c60d0928613a27f3a0c600696a03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57e81cfe940ccdc6f9adb6d0766b23b4997a732d65a40e0ebc8e7205df3e7a3\",\"dweb:/ipfs/QmYqg333wXQYVPzG8VHMNkbrrQzxH8dfcMDC1UkzE8kG3L\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xbe2a7168b0c49ece422ae681bd9caba8cb48472444985278bb124e89a5999a5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4403cde92ee92de09f2ec1a5ef615ceda658448d32a0343092db82b5e9c900b\",\"dweb:/ipfs/QmdCrHj2rTRm3dW1J6kBMxfsuHYS37r2e5rw2anAHSKQ4A\"]},\"/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd91cdb05403935ffdcfc76f70ee8109260dcd993a4214b7355870322d7d6515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc998b5e9fba9bf4b8c3e1c9d964fb631be33c3322ae8c97ddf7434cbe461ed5\",\"dweb:/ipfs/QmXKJrUW57mNjuyTvieoXRtP8agtnp1JF6fjqZhqRta2Ta\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d3578063a9059cbb146101e6578063aa271e1a146101f9578063dd62ed3e1461020c576100f5565b806370a082311461019b57806395d89b41146101ae578063983b2d56146101b657806398650275146101cb576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b61010261021f565b60405161010f9190610a4f565b60405180910390f35b61012b610126366004610a1b565b6102b1565b60405161010f9190610a44565b6101406102ce565b60405161010f9190610d28565b61012b61015b3660046109e0565b6102d4565b61016861035b565b60405161010f9190610d31565b61012b610183366004610a1b565b610364565b61012b610196366004610a1b565b6103b2565b6101406101a9366004610994565b6103ee565b61010261040d565b6101c96101c4366004610994565b61041c565b005b6101c961044f565b61012b6101e1366004610a1b565b610461565b61012b6101f4366004610a1b565b6104c9565b61012b610207366004610994565b6104dd565b61014061021a3660046109ae565b6104f0565b60606003805461022e90610d6e565b80601f016020809104026020016040519081016040528092919081815260200182805461025a90610d6e565b80156102a75780601f1061027c576101008083540402835291602001916102a7565b820191906000526020600020905b81548152906001019060200180831161028a57829003601f168201915b5050505050905090565b60006102c56102be61059d565b84846105a1565b50600192915050565b60025490565b60006102e1848484610655565b610351846102ed61059d565b61034c85604051806060016040528060288152602001610de6602891396001600160a01b038a1660009081526001602052604081209061032b61059d565b6001600160a01b03168152602081019190915260400160002054919061076a565b6105a1565b5060019392505050565b60055460ff1690565b60006102c561037161059d565b8461034c856001600061038261059d565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610567565b60006103bf61020761059d565b6103e45760405162461bcd60e51b81526004016103db90610b95565b60405180910390fd5b6102c583836107a4565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461022e90610d6e565b61042761020761059d565b6104435760405162461bcd60e51b81526004016103db90610b95565b61044c81610864565b50565b61045f61045a61059d565b6108a6565b565b60006102c561046e61059d565b8461034c85604051806060016040528060258152602001610e0e602591396001600061049861059d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061076a565b60006102c56104d661059d565b8484610655565b60006104ea6006836108e8565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61052582826108e8565b156105425760405162461bcd60e51b81526004016103db90610ae5565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000806105748385610d3f565b9050838110156105965760405162461bcd60e51b81526004016103db90610b5e565b9392505050565b3390565b6001600160a01b0383166105c75760405162461bcd60e51b81526004016103db90610cad565b6001600160a01b0382166105ed5760405162461bcd60e51b81526004016103db90610b1c565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610648908590610d28565b60405180910390a3505050565b6001600160a01b03831661067b5760405162461bcd60e51b81526004016103db90610c68565b6001600160a01b0382166106a15760405162461bcd60e51b81526004016103db90610aa2565b6106ac838383610930565b6106e981604051806060016040528060268152602001610dc0602691396001600160a01b038616600090815260208190526040902054919061076a565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107189082610567565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610648908590610d28565b6000818484111561078e5760405162461bcd60e51b81526004016103db9190610a4f565b50600061079b8486610d57565b95945050505050565b6001600160a01b0382166107ca5760405162461bcd60e51b81526004016103db90610cf1565b6107d660008383610930565b6002546107e39082610567565b6002556001600160a01b0382166000908152602081905260409020546108099082610567565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610858908590610d28565b60405180910390a35050565b61086f60068261051b565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6108b1600682610935565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166109105760405162461bcd60e51b81526004016103db90610c26565b506001600160a01b03166000908152602091909152604090205460ff1690565b505050565b61093f82826108e8565b61095b5760405162461bcd60e51b81526004016103db90610be5565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b038116811461040857600080fd5b6000602082840312156109a5578081fd5b6105968261097d565b600080604083850312156109c0578081fd5b6109c98361097d565b91506109d76020840161097d565b90509250929050565b6000806000606084860312156109f4578081fd5b6109fd8461097d565b9250610a0b6020850161097d565b9150604084013590509250925092565b60008060408385031215610a2d578182fd5b610a368361097d565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610a7b57858101830151858201604001528201610a5f565b81811115610a8c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601f908201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604082015260600190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b60208082526021908201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6040820152606560f81b606082015260800190565b60208082526022908201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d5257610d52610da9565b500190565b600082821015610d6957610d69610da9565b500390565b600281046001821680610d8257607f821691505b60208210811415610da357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206f8b446f7cb59501dba32132ef84044ff54163f48af35fb511c527b750f84c6f64736f6c63430008000033",
    "sourceMap": "404:275:3:-:0;;;552:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1953:137:5;;;;;;;;;;;;;-1:-1:-1;;;1953:137:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1953:137:5;;;2027:5;2019;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2042:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2069:9:5;:14;;-1:-1:-1;;2069:14:5;2081:2;2069:14;;;-1:-1:-1;358:24:2;369:12;:10;:12::i;:::-;358:10;:24::i;:::-;615:55:3::1;621:12;:10;:12::i;:::-;657:10;:8;:10::i;:::-;645:23;::::0;649:19:::1;;645:2;:23;:::i;:::-;635:34;::::0;:6;:34:::1;:::i;:::-;615:5;:55::i;:::-;552:125:::0;404:275;;598:113:0;693:10;598:113;:::o;860:119:2:-;916:21;929:7;916:8;:12;;;;;;:21;;;;:::i;:::-;952:20;;-1:-1:-1;;;;;952:20:2;;;;;;;;860:119;:::o;3057:81:5:-;3122:9;;;;3057:81;:::o;8275:370::-;-1:-1:-1;;;;;8358:21:5;;8350:65;;;;-1:-1:-1;;;8350:65:5;;;;;;;:::i;:::-;;;;;;;;;8426:49;8455:1;8459:7;8468:6;8426:20;:49::i;:::-;8501:24;8518:6;8501:12;;:16;;;;;;:24;;;;:::i;:::-;8486:12;:39;-1:-1:-1;;;;;8556:18:5;;:9;:18;;;;;;;;;;;;:30;;8579:6;;8556:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8535:18:5;;:9;:18;;;;;;;;;;;:51;;;;8601:37;;8535:18;;:9;8601:37;;;;8631:6;;8601:37;:::i;:::-;;;;;;;;8275:370;;:::o;300:175:1:-;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;11200:121:5:-;;;;:::o;882:176:4:-;940:7;;971:5;975:1;971;:5;:::i;:::-;959:17;;999:1;994;:6;;986:46;;;;-1:-1:-1;;;986:46:4;;;;;;;:::i;:::-;1050:1;882:176;-1:-1:-1;;;882:176:4:o;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;404:275:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;404:275:3;;;-1:-1:-1;404:275:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:194:8;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;-1:-1:-1;186:16:8;;95:113;-1:-1:-1;95:113:8:o;213:355::-;415:2;397:21;;;454:2;434:18;;;427:30;493:33;488:2;473:18;;466:61;559:2;544:18;;387:181::o;573:351::-;775:2;757:21;;;814:2;794:18;;;787:30;853:29;848:2;833:18;;826:57;915:2;900:18;;747:177::o;929:398::-;1131:2;1113:21;;;1170:2;1150:18;;;1143:30;1209:34;1204:2;1189:18;;1182:62;-1:-1:-1;;;1275:2:8;1260:18;;1253:32;1317:3;1302:19;;1103:224::o;1332:355::-;1534:2;1516:21;;;1573:2;1553:18;;;1546:30;1612:33;1607:2;1592:18;;1585:61;1678:2;1663:18;;1506:181::o;1692:177::-;1838:25;;;1826:2;1811:18;;1793:76::o;1874:128::-;;1945:1;1941:6;1938:1;1935:13;1932:2;;;1951:18;;:::i;:::-;-1:-1:-1;1987:9:8;;1922:80::o;2007:453::-;2103:6;2126:5;2140:314;2189:1;2226:2;2216:8;2213:16;2203:2;;2233:5;;;2203:2;2274:4;2269:3;2265:14;2259:4;2256:24;2253:2;;;2283:18;;:::i;:::-;2333:2;2323:8;2319:17;2316:2;;;2348:16;;;;2316:2;2427:17;;;;;2387:15;;2140:314;;;2084:376;;;;;;;:::o;2465:139::-;;2554:44;-1:-1:-1;;2581:8:8;2575:4;2609:922;2693:8;2683:2;;-1:-1:-1;2734:1:8;2748:5;;2683:2;2782:4;2772:2;;-1:-1:-1;2819:1:8;2833:5;;2772:2;2864:4;2882:1;2877:59;;;;2950:1;2945:183;;;;2857:271;;2877:59;2907:1;2898:10;;2921:5;;;2945:183;2982:3;2972:8;2969:17;2966:2;;;2989:18;;:::i;:::-;3045:1;3035:8;3031:16;3022:25;;3073:3;3066:5;3063:14;3060:2;;;3080:18;;:::i;:::-;3113:5;;;2857:271;;3212:2;3202:8;3199:16;3193:3;3187:4;3184:13;3180:36;3174:2;3164:8;3161:16;3156:2;3150:4;3147:12;3143:35;3140:77;3137:2;;;-1:-1:-1;3249:19:8;;;3284:14;;;3281:2;;;3301:18;;:::i;:::-;3334:5;;3137:2;3381:42;3419:3;3409:8;3403:4;3400:1;3381:42;:::i;:::-;3456:6;3451:3;3447:16;3438:7;3435:29;3432:2;;;3467:18;;:::i;:::-;3505:20;;2673:858;-1:-1:-1;;;;2673:858:8:o;3536:168::-;;3642:1;3638;3634:6;3630:14;3627:1;3624:21;3619:1;3612:9;3605:17;3601:45;3598:2;;;3649:18;;:::i;:::-;-1:-1:-1;3689:9:8;;3588:116::o;3709:380::-;3794:1;3784:12;;3841:1;3831:12;;;3852:2;;3906:4;3898:6;3894:17;3884:27;;3852:2;3959;3951:6;3948:14;3928:18;3925:38;3922:2;;;4005:10;4000:3;3996:20;3993:1;3986:31;4040:4;4037:1;4030:15;4068:4;4065:1;4058:15;3922:2;;3764:325;;;:::o;4094:127::-;4155:10;4150:3;4146:20;4143:1;4136:31;4186:4;4183:1;4176:15;4210:4;4207:1;4200:15;4126:95;404:275:3;;;;;;",
    "deployedSourceMap": "404:275:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2155:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4271:202;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3198:98::-;;;:::i;:::-;;;;;;;:::i;4940:439::-;;;;;;:::i;:::-;;:::i;3057:81::-;;;:::i;:::-;;;;;;;:::i;5774:289::-;;;;;;:::i;:::-;;:::i;552:168:6:-;;;;;;:::i;:::-;;:::i;3354:117:5:-;;;;;;:::i;:::-;;:::i;2349:85::-;;;:::i;681:90:2:-;;;;;;:::i;:::-;;:::i;:::-;;777:77;;;:::i;6550:386:5:-;;;;;;:::i;:::-;;:::i;3674:208::-;;;;;;:::i;:::-;;:::i;568:107:2:-;;;;;;:::i;:::-;;:::i;3940:193:5:-;;;;;;:::i;:::-;;:::i;2155:81::-;2192:13;2224:5;2217:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2155:81;:::o;4271:202::-;4386:4;4406:39;4415:12;:10;:12::i;:::-;4429:7;4438:6;4406:8;:39::i;:::-;-1:-1:-1;4462:4:5;4271:202;;;;:::o;3198:98::-;3277:12;;3198:98;:::o;4940:439::-;5076:4;5092:36;5102:6;5110:9;5121:6;5092:9;:36::i;:::-;5138:213;5160:6;5180:12;:10;:12::i;:::-;5206:135;5261:6;5206:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5206:19:5;;;;;;:11;:19;;;;;;5226:12;:10;:12::i;:::-;-1:-1:-1;;;;;5206:33:5;;;;;;;;;;;;-1:-1:-1;5206:33:5;;;:135;:37;:135::i;:::-;5138:8;:213::i;:::-;-1:-1:-1;5368:4:5;4940:439;;;;;:::o;3057:81::-;3122:9;;;;3057:81;:::o;5774:289::-;5886:4;5906:129;5928:12;:10;:12::i;:::-;5954:7;5975:50;6014:10;5975:11;:25;5987:12;:10;:12::i;:::-;-1:-1:-1;;;;;5975:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;5975:25:5;;;:34;;;;;;;;;;;:38;:50::i;552:168:6:-;650:4;448:22:2;457:12;:10;:12::i;448:22::-;427:117;;;;-1:-1:-1;;;427:117:2;;;;;;;:::i;:::-;;;;;;;;;670:22:6::1;676:7;685:6;670:5;:22::i;3354:117:5:-:0;-1:-1:-1;;;;;3446:18:5;;3420:7;3446:18;;;;;;;;;;;3354:117;;;;:::o;2349:85::-;2388:13;2420:7;2413:14;;;;;:::i;681:90:2:-;448:22;457:12;:10;:12::i;448:22::-;427:117;;;;-1:-1:-1;;;427:117:2;;;;;;;:::i;:::-;745:19:::1;756:7;745:10;:19::i;:::-;681:90:::0;:::o;777:77::-;820:27;834:12;:10;:12::i;:::-;820:13;:27::i;:::-;777:77::o;6550:386:5:-;6667:4;6687:221;6709:12;:10;:12::i;:::-;6735:7;6756:142;6812:15;6756:142;;;;;;;;;;;;;;;;;:11;:25;6768:12;:10;:12::i;:::-;-1:-1:-1;;;;;6756:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;6756:25:5;;;:34;;;;;;;;;;;:142;:38;:142::i;3674:208::-;3792:4;3812:42;3822:12;:10;:12::i;:::-;3836:9;3847:6;3812:9;:42::i;568:107:2:-;624:4;647:21;:8;660:7;647:12;:21::i;:::-;640:28;568:107;-1:-1:-1;;568:107:2:o;3940:193:5:-;-1:-1:-1;;;;;4099:18:5;;;4069:7;4099:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3940:193::o;300:175:1:-;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:63;;;;-1:-1:-1;;;368:63:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;441:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;441:27:1;464:4;441:27;;;300:175::o;882:176:4:-;940:7;;971:5;975:1;971;:5;:::i;:::-;959:17;;999:1;994;:6;;986:46;;;;-1:-1:-1;;;986:46:4;;;;;;;:::i;:::-;1050:1;882:176;-1:-1:-1;;;882:176:4:o;598:113:0:-;693:10;598:113;:::o;9832:370:5:-;-1:-1:-1;;;;;9963:19:5;;9955:68;;;;-1:-1:-1;;;9955:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;10041:21:5;;10033:68;;;;-1:-1:-1;;;10033:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;10112:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10163:32;;;;;10142:6;;10163:32;:::i;:::-;;;;;;;;9832:370;;;:::o;7410:594::-;-1:-1:-1;;;;;7545:20:5;;7537:70;;;;-1:-1:-1;;;7537:70:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;7625:23:5;;7617:71;;;;-1:-1:-1;;;7617:71:5;;;;;;;:::i;:::-;7699:47;7720:6;7728:9;7739:6;7699:20;:47::i;:::-;7777:105;7812:6;7777:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7777:17:5;;:9;:17;;;;;;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;7757:17:5;;;:9;:17;;;;;;;;;;;:125;;;;7915:20;;;;;;;:32;;7940:6;7915:24;:32::i;:::-;-1:-1:-1;;;;;7892:20:5;;;:9;:20;;;;;;;;;;;;:55;;;;7962:35;;;;;;;;;;7990:6;;7962:35;:::i;1754:217:4:-;1870:7;1905:12;1897:6;;;;1889:29;;;;-1:-1:-1;;;1889:29:4;;;;;;;;:::i;:::-;-1:-1:-1;1928:9:4;1940:5;1944:1;1940;:5;:::i;:::-;1928:17;1754:217;-1:-1:-1;;;;;1754:217:4:o;8275:370:5:-;-1:-1:-1;;;;;8358:21:5;;8350:65;;;;-1:-1:-1;;;8350:65:5;;;;;;;:::i;:::-;8426:49;8455:1;8459:7;8468:6;8426:20;:49::i;:::-;8501:12;;:24;;8518:6;8501:16;:24::i;:::-;8486:12;:39;-1:-1:-1;;;;;8556:18:5;;:9;:18;;;;;;;;;;;:30;;8579:6;8556:22;:30::i;:::-;-1:-1:-1;;;;;8535:18:5;;:9;:18;;;;;;;;;;;:51;;;;8601:37;;8535:18;;:9;8601:37;;;;8631:6;;8601:37;:::i;:::-;;;;;;;;8275:370;;:::o;860:119:2:-;916:21;:8;929:7;916:12;:21::i;:::-;952:20;;-1:-1:-1;;;;;952:20:2;;;;;;;;860:119;:::o;985:127::-;1044:24;:8;1060:7;1044:15;:24::i;:::-;1083:22;;-1:-1:-1;;;;;1083:22:2;;;;;;;;985:127;:::o;819:228:1:-;915:4;-1:-1:-1;;;;;943:21:1;;935:68;;;;-1:-1:-1;;;935:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1020:20:1;:11;:20;;;;;;;;;;;;;;;819:228::o;11200:121:5:-;;;;:::o;550:180:1:-;629:18;633:4;639:7;629:3;:18::i;:::-;621:64;;;;-1:-1:-1;;;621:64:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;695:20:1;718:5;695:20;;;;;;;;;;;:28;;-1:-1:-1;;695:28:1;;;550:180::o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:8:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:8;2052:15;-1:-1:-1;;2048:29:8;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:8:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:8;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:355::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:33;2773:2;2758:18;;2751:61;2844:2;2829:18;;2672:181::o;2858:398::-;3060:2;3042:21;;;3099:2;3079:18;;;3072:30;3138:34;3133:2;3118:18;;3111:62;-1:-1:-1;;;3204:2:8;3189:18;;3182:32;3246:3;3231:19;;3032:224::o;3261:351::-;3463:2;3445:21;;;3502:2;3482:18;;;3475:30;3541:29;3536:2;3521:18;;3514:57;3603:2;3588:18;;3435:177::o;3617:412::-;3819:2;3801:21;;;3858:2;3838:18;;;3831:30;3897:34;3892:2;3877:18;;3870:62;-1:-1:-1;;;3963:2:8;3948:18;;3941:46;4019:3;4004:19;;3791:238::o;4034:397::-;4236:2;4218:21;;;4275:2;4255:18;;;4248:30;4314:34;4309:2;4294:18;;4287:62;-1:-1:-1;;;4380:2:8;4365:18;;4358:31;4421:3;4406:19;;4208:223::o;4436:398::-;4638:2;4620:21;;;4677:2;4657:18;;;4650:30;4716:34;4711:2;4696:18;;4689:62;-1:-1:-1;;;4782:2:8;4767:18;;4760:32;4824:3;4809:19;;4610:224::o;4839:401::-;5041:2;5023:21;;;5080:2;5060:18;;;5053:30;5119:34;5114:2;5099:18;;5092:62;-1:-1:-1;;;5185:2:8;5170:18;;5163:35;5230:3;5215:19;;5013:227::o;5245:400::-;5447:2;5429:21;;;5486:2;5466:18;;;5459:30;5525:34;5520:2;5505:18;;5498:62;-1:-1:-1;;;5591:2:8;5576:18;;5569:34;5635:3;5620:19;;5419:226::o;5650:355::-;5852:2;5834:21;;;5891:2;5871:18;;;5864:30;5930:33;5925:2;5910:18;;5903:61;5996:2;5981:18;;5824:181::o;6010:177::-;6156:25;;;6144:2;6129:18;;6111:76::o;6192:184::-;6364:4;6352:17;;;;6334:36;;6322:2;6307:18;;6289:87::o;6381:128::-;;6452:1;6448:6;6445:1;6442:13;6439:2;;;6458:18;;:::i;:::-;-1:-1:-1;6494:9:8;;6429:80::o;6514:125::-;;6582:1;6579;6576:8;6573:2;;;6587:18;;:::i;:::-;-1:-1:-1;6624:9:8;;6563:76::o;6644:380::-;6729:1;6719:12;;6776:1;6766:12;;;6787:2;;6841:4;6833:6;6829:17;6819:27;;6787:2;6894;6886:6;6883:14;6863:18;6860:38;6857:2;;;6940:10;6935:3;6931:20;6928:1;6921:31;6975:4;6972:1;6965:15;7003:4;7000:1;6993:15;6857:2;;6699:325;;;:::o;7029:127::-;7090:10;7085:3;7081:20;7078:1;7071:31;7121:4;7118:1;7111:15;7145:4;7142:1;7135:15",
    "sourcePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/examples/SimpleToken.sol",
        "exportedSymbols": {
            "Context": [
                25
            ],
            "ERC20": [
                961
            ],
            "ERC20Mintable": [
                991
            ],
            "IERC20": [
                1069
            ],
            "MinterRole": [
                223
            ],
            "Roles": [
                114
            ],
            "SafeMath": [
                458
            ],
            "SimpleToken": [
                262
            ]
        },
        "id": 263,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 225,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:3"
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/GSN/Context.sol",
                "file": "../GSN/Context.sol",
                "id": 226,
                "nodeType": "ImportDirective",
                "scope": 263,
                "sourceUnit": 26,
                "src": "66:28:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "../token/ERC20/ERC20.sol",
                "id": 227,
                "nodeType": "ImportDirective",
                "scope": 263,
                "sourceUnit": 962,
                "src": "95:34:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/christophercruttenden/openzeppelin-contracts/contracts/token/ERC20/ERC20Mintable.sol",
                "file": "../token/ERC20/ERC20Mintable.sol",
                "id": 228,
                "nodeType": "ImportDirective",
                "scope": 263,
                "sourceUnit": 992,
                "src": "130:42:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 230,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25,
                            "src": "428:7:3"
                        },
                        "id": 231,
                        "nodeType": "InheritanceSpecifier",
                        "src": "428:7:3"
                    },
                    {
                        "baseName": {
                            "id": 232,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 961,
                            "src": "437:5:3"
                        },
                        "id": 233,
                        "nodeType": "InheritanceSpecifier",
                        "src": "437:5:3"
                    },
                    {
                        "baseName": {
                            "id": 234,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 991,
                            "src": "444:13:3"
                        },
                        "id": 235,
                        "nodeType": "InheritanceSpecifier",
                        "src": "444:13:3"
                    }
                ],
                "contractDependencies": [
                    25,
                    223,
                    961,
                    991,
                    1069
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 229,
                    "nodeType": "StructuredDocumentation",
                    "src": "174:229:3",
                    "text": " @title SimpleToken\n @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n Note they can later distribute these tokens as they wish using `transfer` and other\n `ERC20` functions."
                },
                "fullyImplemented": true,
                "id": 262,
                "linearizedBaseContracts": [
                    262,
                    991,
                    223,
                    961,
                    1069,
                    25
                ],
                "name": "SimpleToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 260,
                            "nodeType": "Block",
                            "src": "605:72:3",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 246,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 13,
                                                    "src": "621:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "621:12:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 257,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 248,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 238,
                                                    "src": "635:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 255,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 249,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "645:2:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 252,
                                                                            "name": "decimals",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 537,
                                                                            "src": "657:8:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                                "typeString": "function () view returns (uint8)"
                                                                            }
                                                                        },
                                                                        "id": 253,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "657:10:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    ],
                                                                    "id": 251,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "649:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 250,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "649:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 254,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "649:19:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "645:23:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 256,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "644:25:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "635:34:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 245,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 837,
                                            "src": "615:5:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 258,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "615:55:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 259,
                                    "nodeType": "ExpressionStatement",
                                    "src": "615:55:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 236,
                            "nodeType": "StructuredDocumentation",
                            "src": "464:83:3",
                            "text": " @dev Constructor that gives _msgSender() all of existing tokens."
                        },
                        "id": 261,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "53696d706c65546f6b656e",
                                        "id": 241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "583:13:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                                            "typeString": "literal_string \"SimpleToken\""
                                        },
                                        "value": "SimpleToken"
                                    },
                                    {
                                        "hexValue": "53494d",
                                        "id": 242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "598:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
                                            "typeString": "literal_string \"SIM\""
                                        },
                                        "value": "SIM"
                                    }
                                ],
                                "id": 243,
                                "modifierName": {
                                    "id": 240,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 961,
                                    "src": "577:5:3"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "577:27:3"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 239,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 238,
                                    "mutability": "mutable",
                                    "name": "tokens",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 261,
                                    "src": "564:11:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 237,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "564:4:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "563:13:3"
                        },
                        "returnParameters": {
                            "id": 244,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "605:0:3"
                        },
                        "scope": 262,
                        "src": "552:125:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 263,
                "src": "404:275:3"
            }
        ],
        "src": "33:646:3"
    },
    "functionHashes": {
        "addMinter(address)": "983b2d56",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "isMinter(address)": "aa271e1a",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "renounceMinter()": "98650275",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "737600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addMinter(address)": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22629",
            "balanceOf(address)": "infinite",
            "decimals()": "1091",
            "decreaseAllowance(address,uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "isMinter(address)": "1437",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "renounceMinter()": "23379",
            "symbol()": "infinite",
            "totalSupply()": "1096",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}